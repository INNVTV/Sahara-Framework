//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlatformAdminSite.PlatformBillingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceBalanceTransactions", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Billing.Models")]
    [System.SerializableAttribute()]
    public partial class SourceBalanceTransactions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalFeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalGrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.PlatformBillingService.BalanceTransaction[] TransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalFees {
            get {
                return this.TotalFeesField;
            }
            set {
                if ((this.TotalFeesField.Equals(value) != true)) {
                    this.TotalFeesField = value;
                    this.RaisePropertyChanged("TotalFees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalGross {
            get {
                return this.TotalGrossField;
            }
            set {
                if ((this.TotalGrossField.Equals(value) != true)) {
                    this.TotalGrossField = value;
                    this.RaisePropertyChanged("TotalGross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalNet {
            get {
                return this.TotalNetField;
            }
            set {
                if ((this.TotalNetField.Equals(value) != true)) {
                    this.TotalNetField = value;
                    this.RaisePropertyChanged("TotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.PlatformBillingService.BalanceTransaction[] Transactions {
            get {
                return this.TransactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionsField, value) != true)) {
                    this.TransactionsField = value;
                    this.RaisePropertyChanged("Transactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BalanceTransaction", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Billing.Models")]
    [System.SerializableAttribute()]
    public partial class BalanceTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BalanceTransactionID {
            get {
                return this.BalanceTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceTransactionIDField, value) != true)) {
                    this.BalanceTransactionIDField = value;
                    this.RaisePropertyChanged("BalanceTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Net {
            get {
                return this.NetField;
            }
            set {
                if ((this.NetField.Equals(value) != true)) {
                    this.NetField = value;
                    this.RaisePropertyChanged("Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transfer", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Billing.Models")]
    [System.SerializableAttribute()]
    public partial class Transfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BalanceTransactionID {
            get {
                return this.BalanceTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceTransactionIDField, value) != true)) {
                    this.BalanceTransactionIDField = value;
                    this.RaisePropertyChanged("BalanceTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationPayment {
            get {
                return this.DestinationPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationPaymentField, value) != true)) {
                    this.DestinationPaymentField = value;
                    this.RaisePropertyChanged("DestinationPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureCode {
            get {
                return this.FailureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureCodeField, value) != true)) {
                    this.FailureCodeField = value;
                    this.RaisePropertyChanged("FailureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatementDescription {
            get {
                return this.StatementDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementDescriptionField, value) != true)) {
                    this.StatementDescriptionField = value;
                    this.RaisePropertyChanged("StatementDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferID {
            get {
                return this.TransferIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferIDField, value) != true)) {
                    this.TransferIDField = value;
                    this.RaisePropertyChanged("TransferID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlatformBillingService.IPlatformBillingService")]
    public interface IPlatformBillingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetBalanceTransactionsForSource", ReplyAction="http://tempuri.org/IPlatformBillingService/GetBalanceTransactionsForSourceRespons" +
            "e")]
        PlatformAdminSite.PlatformBillingService.SourceBalanceTransactions GetBalanceTransactionsForSource(string sourceId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetBalanceTransactionsForSource", ReplyAction="http://tempuri.org/IPlatformBillingService/GetBalanceTransactionsForSourceRespons" +
            "e")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.SourceBalanceTransactions> GetBalanceTransactionsForSourceAsync(string sourceId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransfer", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferResponse")]
        PlatformAdminSite.PlatformBillingService.Transfer GetTransfer(string invoiceId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransfer", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer> GetTransferAsync(string invoiceId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistoryResponse")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory(int itemLimit, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistoryResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistoryAsync(int itemLimit, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRangeResponse" +
            "")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange(int itemLimit, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRangeResponse" +
            "")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRangeAsync(int itemLimit, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_Next", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_NextResponse")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_Next(int itemLimit, string startingAfterTransferId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_Next", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_NextResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_NextAsync(int itemLimit, string startingAfterTransferId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_Last", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_LastResponse")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_Last(int itemLimit, string endingBeforeTransferId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_Last", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_LastResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_LastAsync(int itemLimit, string endingBeforeTransferId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_Next", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_NextRes" +
            "ponse")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange_Next(int itemLimit, string startingAfterTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_Next", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_NextRes" +
            "ponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRange_NextAsync(int itemLimit, string startingAfterTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_Last", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_LastRes" +
            "ponse")]
        PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange_Last(int itemLimit, string endingBeforeTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_Last", ReplyAction="http://tempuri.org/IPlatformBillingService/GetTransferHistory_ByDateRange_LastRes" +
            "ponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRange_LastAsync(int itemLimit, string endingBeforeTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlatformBillingServiceChannel : PlatformAdminSite.PlatformBillingService.IPlatformBillingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformBillingServiceClient : System.ServiceModel.ClientBase<PlatformAdminSite.PlatformBillingService.IPlatformBillingService>, PlatformAdminSite.PlatformBillingService.IPlatformBillingService {
        
        public PlatformBillingServiceClient() {
        }
        
        public PlatformBillingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformBillingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformBillingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformBillingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PlatformAdminSite.PlatformBillingService.SourceBalanceTransactions GetBalanceTransactionsForSource(string sourceId, string sharedClientKey) {
            return base.Channel.GetBalanceTransactionsForSource(sourceId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.SourceBalanceTransactions> GetBalanceTransactionsForSourceAsync(string sourceId, string sharedClientKey) {
            return base.Channel.GetBalanceTransactionsForSourceAsync(sourceId, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer GetTransfer(string invoiceId, string sharedClientKey) {
            return base.Channel.GetTransfer(invoiceId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer> GetTransferAsync(string invoiceId, string sharedClientKey) {
            return base.Channel.GetTransferAsync(invoiceId, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory(int itemLimit, string sharedClientKey) {
            return base.Channel.GetTransferHistory(itemLimit, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistoryAsync(int itemLimit, string sharedClientKey) {
            return base.Channel.GetTransferHistoryAsync(itemLimit, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange(int itemLimit, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRange(itemLimit, startDate, endDate, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRangeAsync(int itemLimit, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRangeAsync(itemLimit, startDate, endDate, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_Next(int itemLimit, string startingAfterTransferId, string sharedClientKey) {
            return base.Channel.GetTransferHistory_Next(itemLimit, startingAfterTransferId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_NextAsync(int itemLimit, string startingAfterTransferId, string sharedClientKey) {
            return base.Channel.GetTransferHistory_NextAsync(itemLimit, startingAfterTransferId, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_Last(int itemLimit, string endingBeforeTransferId, string sharedClientKey) {
            return base.Channel.GetTransferHistory_Last(itemLimit, endingBeforeTransferId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_LastAsync(int itemLimit, string endingBeforeTransferId, string sharedClientKey) {
            return base.Channel.GetTransferHistory_LastAsync(itemLimit, endingBeforeTransferId, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange_Next(int itemLimit, string startingAfterTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRange_Next(itemLimit, startingAfterTransferId, startDate, endDate, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRange_NextAsync(int itemLimit, string startingAfterTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRange_NextAsync(itemLimit, startingAfterTransferId, startDate, endDate, sharedClientKey);
        }
        
        public PlatformAdminSite.PlatformBillingService.Transfer[] GetTransferHistory_ByDateRange_Last(int itemLimit, string endingBeforeTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRange_Last(itemLimit, endingBeforeTransferId, startDate, endDate, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.PlatformBillingService.Transfer[]> GetTransferHistory_ByDateRange_LastAsync(int itemLimit, string endingBeforeTransferId, System.DateTime startDate, System.DateTime endDate, string sharedClientKey) {
            return base.Channel.GetTransferHistory_ByDateRange_LastAsync(itemLimit, endingBeforeTransferId, startDate, endDate, sharedClientKey);
        }
    }
}
