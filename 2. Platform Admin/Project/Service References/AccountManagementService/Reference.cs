//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlatformAdminSite.AccountManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountApiUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccountEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountManagementUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountSiteUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.AccountStatus AccountStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountStatusStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CardExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClosureApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DelinquentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentPartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.PaymentFrequency PaymentFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentFrequencyMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.PaymentPlan PaymentPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentPlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSearchIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProvisionedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProvisionedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchPartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SqlPartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoragePartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripeCardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripeCustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripePlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripeSubscriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.AccountUser[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountApiUrl {
            get {
                return this.AccountApiUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountApiUrlField, value) != true)) {
                    this.AccountApiUrlField = value;
                    this.RaisePropertyChanged("AccountApiUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccountEndDate {
            get {
                return this.AccountEndDateField;
            }
            set {
                if ((this.AccountEndDateField.Equals(value) != true)) {
                    this.AccountEndDateField = value;
                    this.RaisePropertyChanged("AccountEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountManagementUrl {
            get {
                return this.AccountManagementUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountManagementUrlField, value) != true)) {
                    this.AccountManagementUrlField = value;
                    this.RaisePropertyChanged("AccountManagementUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNameKey {
            get {
                return this.AccountNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameKeyField, value) != true)) {
                    this.AccountNameKeyField = value;
                    this.RaisePropertyChanged("AccountNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountSiteUrl {
            get {
                return this.AccountSiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountSiteUrlField, value) != true)) {
                    this.AccountSiteUrlField = value;
                    this.RaisePropertyChanged("AccountSiteUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.AccountStatus AccountStatus {
            get {
                return this.AccountStatusField;
            }
            set {
                if ((this.AccountStatusField.Equals(value) != true)) {
                    this.AccountStatusField = value;
                    this.RaisePropertyChanged("AccountStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountStatusString {
            get {
                return this.AccountStatusStringField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountStatusStringField, value) != true)) {
                    this.AccountStatusStringField = value;
                    this.RaisePropertyChanged("AccountStatusString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activated {
            get {
                return this.ActivatedField;
            }
            set {
                if ((this.ActivatedField.Equals(value) != true)) {
                    this.ActivatedField = value;
                    this.RaisePropertyChanged("Activated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CardExpiration {
            get {
                return this.CardExpirationField;
            }
            set {
                if ((this.CardExpirationField.Equals(value) != true)) {
                    this.CardExpirationField = value;
                    this.RaisePropertyChanged("CardExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ClosureApproved {
            get {
                return this.ClosureApprovedField;
            }
            set {
                if ((this.ClosureApprovedField.Equals(value) != true)) {
                    this.ClosureApprovedField = value;
                    this.RaisePropertyChanged("ClosureApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Credits {
            get {
                return this.CreditsField;
            }
            set {
                if ((this.CreditsField.Equals(value) != true)) {
                    this.CreditsField = value;
                    this.RaisePropertyChanged("Credits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delinquent {
            get {
                return this.DelinquentField;
            }
            set {
                if ((this.DelinquentField.Equals(value) != true)) {
                    this.DelinquentField = value;
                    this.RaisePropertyChanged("Delinquent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentPartition {
            get {
                return this.DocumentPartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentPartitionField, value) != true)) {
                    this.DocumentPartitionField = value;
                    this.RaisePropertyChanged("DocumentPartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedDate {
            get {
                return this.LockedDateField;
            }
            set {
                if ((this.LockedDateField.Equals(value) != true)) {
                    this.LockedDateField = value;
                    this.RaisePropertyChanged("LockedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.PaymentFrequency PaymentFrequency {
            get {
                return this.PaymentFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFrequencyField, value) != true)) {
                    this.PaymentFrequencyField = value;
                    this.RaisePropertyChanged("PaymentFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentFrequencyMonths {
            get {
                return this.PaymentFrequencyMonthsField;
            }
            set {
                if ((this.PaymentFrequencyMonthsField.Equals(value) != true)) {
                    this.PaymentFrequencyMonthsField = value;
                    this.RaisePropertyChanged("PaymentFrequencyMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.PaymentPlan PaymentPlan {
            get {
                return this.PaymentPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentPlanField, value) != true)) {
                    this.PaymentPlanField = value;
                    this.RaisePropertyChanged("PaymentPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentPlanName {
            get {
                return this.PaymentPlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentPlanNameField, value) != true)) {
                    this.PaymentPlanNameField = value;
                    this.RaisePropertyChanged("PaymentPlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSearchIndex {
            get {
                return this.ProductSearchIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSearchIndexField, value) != true)) {
                    this.ProductSearchIndexField = value;
                    this.RaisePropertyChanged("ProductSearchIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Provisioned {
            get {
                return this.ProvisionedField;
            }
            set {
                if ((this.ProvisionedField.Equals(value) != true)) {
                    this.ProvisionedField = value;
                    this.RaisePropertyChanged("Provisioned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProvisionedDate {
            get {
                return this.ProvisionedDateField;
            }
            set {
                if ((this.ProvisionedDateField.Equals(value) != true)) {
                    this.ProvisionedDateField = value;
                    this.RaisePropertyChanged("ProvisionedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemaName {
            get {
                return this.SchemaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemaNameField, value) != true)) {
                    this.SchemaNameField = value;
                    this.RaisePropertyChanged("SchemaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchPartition {
            get {
                return this.SearchPartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPartitionField, value) != true)) {
                    this.SearchPartitionField = value;
                    this.RaisePropertyChanged("SearchPartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SqlPartition {
            get {
                return this.SqlPartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlPartitionField, value) != true)) {
                    this.SqlPartitionField = value;
                    this.RaisePropertyChanged("SqlPartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoragePartition {
            get {
                return this.StoragePartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.StoragePartitionField, value) != true)) {
                    this.StoragePartitionField = value;
                    this.RaisePropertyChanged("StoragePartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripeCardID {
            get {
                return this.StripeCardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StripeCardIDField, value) != true)) {
                    this.StripeCardIDField = value;
                    this.RaisePropertyChanged("StripeCardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripeCustomerID {
            get {
                return this.StripeCustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StripeCustomerIDField, value) != true)) {
                    this.StripeCustomerIDField = value;
                    this.RaisePropertyChanged("StripeCustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripePlanID {
            get {
                return this.StripePlanIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StripePlanIDField, value) != true)) {
                    this.StripePlanIDField = value;
                    this.RaisePropertyChanged("StripePlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripeSubscriptionID {
            get {
                return this.StripeSubscriptionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StripeSubscriptionIDField, value) != true)) {
                    this.StripeSubscriptionIDField = value;
                    this.RaisePropertyChanged("StripeSubscriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.AccountUser[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentFrequency", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class PaymentFrequency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentFrequencyMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentFrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceBreakField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.IntervalField, value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntervalCount {
            get {
                return this.IntervalCountField;
            }
            set {
                if ((this.IntervalCountField.Equals(value) != true)) {
                    this.IntervalCountField = value;
                    this.RaisePropertyChanged("IntervalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentFrequencyMonths {
            get {
                return this.PaymentFrequencyMonthsField;
            }
            set {
                if ((this.PaymentFrequencyMonthsField.Equals(value) != true)) {
                    this.PaymentFrequencyMonthsField = value;
                    this.RaisePropertyChanged("PaymentFrequencyMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentFrequencyName {
            get {
                return this.PaymentFrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFrequencyNameField, value) != true)) {
                    this.PaymentFrequencyNameField = value;
                    this.RaisePropertyChanged("PaymentFrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceBreak {
            get {
                return this.PriceBreakField;
            }
            set {
                if ((this.PriceBreakField.Equals(value) != true)) {
                    this.PriceBreakField = value;
                    this.RaisePropertyChanged("PriceBreak");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentPlan", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class PaymentPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowCustomOrderingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowImageEnhancementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLocationDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowSalesLeadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowThemesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.AlternateRate[] AlternateRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCategorizationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCategorizationsPerSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageFormatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageGalleriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImagesPerGalleryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxProductsPerSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxValuesPerPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonthlyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthlySupportHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentPlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCustomOrdering {
            get {
                return this.AllowCustomOrderingField;
            }
            set {
                if ((this.AllowCustomOrderingField.Equals(value) != true)) {
                    this.AllowCustomOrderingField = value;
                    this.RaisePropertyChanged("AllowCustomOrdering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowImageEnhancements {
            get {
                return this.AllowImageEnhancementsField;
            }
            set {
                if ((this.AllowImageEnhancementsField.Equals(value) != true)) {
                    this.AllowImageEnhancementsField = value;
                    this.RaisePropertyChanged("AllowImageEnhancements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLocationData {
            get {
                return this.AllowLocationDataField;
            }
            set {
                if ((this.AllowLocationDataField.Equals(value) != true)) {
                    this.AllowLocationDataField = value;
                    this.RaisePropertyChanged("AllowLocationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSalesLeads {
            get {
                return this.AllowSalesLeadsField;
            }
            set {
                if ((this.AllowSalesLeadsField.Equals(value) != true)) {
                    this.AllowSalesLeadsField = value;
                    this.RaisePropertyChanged("AllowSalesLeads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowThemes {
            get {
                return this.AllowThemesField;
            }
            set {
                if ((this.AllowThemesField.Equals(value) != true)) {
                    this.AllowThemesField = value;
                    this.RaisePropertyChanged("AllowThemes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.AlternateRate[] AlternateRates {
            get {
                return this.AlternateRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateRatesField, value) != true)) {
                    this.AlternateRatesField = value;
                    this.RaisePropertyChanged("AlternateRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCategorizations {
            get {
                return this.MaxCategorizationsField;
            }
            set {
                if ((this.MaxCategorizationsField.Equals(value) != true)) {
                    this.MaxCategorizationsField = value;
                    this.RaisePropertyChanged("MaxCategorizations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCategorizationsPerSet {
            get {
                return this.MaxCategorizationsPerSetField;
            }
            set {
                if ((this.MaxCategorizationsPerSetField.Equals(value) != true)) {
                    this.MaxCategorizationsPerSetField = value;
                    this.RaisePropertyChanged("MaxCategorizationsPerSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageFormats {
            get {
                return this.MaxImageFormatsField;
            }
            set {
                if ((this.MaxImageFormatsField.Equals(value) != true)) {
                    this.MaxImageFormatsField = value;
                    this.RaisePropertyChanged("MaxImageFormats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageGalleries {
            get {
                return this.MaxImageGalleriesField;
            }
            set {
                if ((this.MaxImageGalleriesField.Equals(value) != true)) {
                    this.MaxImageGalleriesField = value;
                    this.RaisePropertyChanged("MaxImageGalleries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageGroups {
            get {
                return this.MaxImageGroupsField;
            }
            set {
                if ((this.MaxImageGroupsField.Equals(value) != true)) {
                    this.MaxImageGroupsField = value;
                    this.RaisePropertyChanged("MaxImageGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImagesPerGallery {
            get {
                return this.MaxImagesPerGalleryField;
            }
            set {
                if ((this.MaxImagesPerGalleryField.Equals(value) != true)) {
                    this.MaxImagesPerGalleryField = value;
                    this.RaisePropertyChanged("MaxImagesPerGallery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProducts {
            get {
                return this.MaxProductsField;
            }
            set {
                if ((this.MaxProductsField.Equals(value) != true)) {
                    this.MaxProductsField = value;
                    this.RaisePropertyChanged("MaxProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProductsPerSet {
            get {
                return this.MaxProductsPerSetField;
            }
            set {
                if ((this.MaxProductsPerSetField.Equals(value) != true)) {
                    this.MaxProductsPerSetField = value;
                    this.RaisePropertyChanged("MaxProductsPerSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProperties {
            get {
                return this.MaxPropertiesField;
            }
            set {
                if ((this.MaxPropertiesField.Equals(value) != true)) {
                    this.MaxPropertiesField = value;
                    this.RaisePropertyChanged("MaxProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxTags {
            get {
                return this.MaxTagsField;
            }
            set {
                if ((this.MaxTagsField.Equals(value) != true)) {
                    this.MaxTagsField = value;
                    this.RaisePropertyChanged("MaxTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxUsers {
            get {
                return this.MaxUsersField;
            }
            set {
                if ((this.MaxUsersField.Equals(value) != true)) {
                    this.MaxUsersField = value;
                    this.RaisePropertyChanged("MaxUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxValuesPerProperty {
            get {
                return this.MaxValuesPerPropertyField;
            }
            set {
                if ((this.MaxValuesPerPropertyField.Equals(value) != true)) {
                    this.MaxValuesPerPropertyField = value;
                    this.RaisePropertyChanged("MaxValuesPerProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyRate {
            get {
                return this.MonthlyRateField;
            }
            set {
                if ((this.MonthlyRateField.Equals(value) != true)) {
                    this.MonthlyRateField = value;
                    this.RaisePropertyChanged("MonthlyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthlySupportHours {
            get {
                return this.MonthlySupportHoursField;
            }
            set {
                if ((this.MonthlySupportHoursField.Equals(value) != true)) {
                    this.MonthlySupportHoursField = value;
                    this.RaisePropertyChanged("MonthlySupportHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentPlanName {
            get {
                return this.PaymentPlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentPlanNameField, value) != true)) {
                    this.PaymentPlanNameField = value;
                    this.RaisePropertyChanged("PaymentPlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchPlan {
            get {
                return this.SearchPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPlanField, value) != true)) {
                    this.SearchPlanField = value;
                    this.RaisePropertyChanged("SearchPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    public enum AccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unprovisioned = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PastDue = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unpaid = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountUser", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class AccountUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNameKey {
            get {
                return this.AccountNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameKeyField, value) != true)) {
                    this.AccountNameKeyField = value;
                    this.RaisePropertyChanged("AccountNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountOwner {
            get {
                return this.AccountOwnerField;
            }
            set {
                if ((this.AccountOwnerField.Equals(value) != true)) {
                    this.AccountOwnerField = value;
                    this.RaisePropertyChanged("AccountOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlternateRate", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class AlternateRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyInMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SavingsPercentageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountedPrice {
            get {
                return this.DiscountedPriceField;
            }
            set {
                if ((this.DiscountedPriceField.Equals(value) != true)) {
                    this.DiscountedPriceField = value;
                    this.RaisePropertyChanged("DiscountedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyInMonths {
            get {
                return this.FrequencyInMonthsField;
            }
            set {
                if ((this.FrequencyInMonthsField.Equals(value) != true)) {
                    this.FrequencyInMonthsField = value;
                    this.RaisePropertyChanged("FrequencyInMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyInterval {
            get {
                return this.FrequencyIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyIntervalField, value) != true)) {
                    this.FrequencyIntervalField = value;
                    this.RaisePropertyChanged("FrequencyInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyName {
            get {
                return this.FrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyNameField, value) != true)) {
                    this.FrequencyNameField = value;
                    this.RaisePropertyChanged("FrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SavingsPercentage {
            get {
                return this.SavingsPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.SavingsPercentageField, value) != true)) {
                    this.SavingsPercentageField = value;
                    this.RaisePropertyChanged("SavingsPercentage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccount", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class UserAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNameKey {
            get {
                return this.AccountNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameKeyField, value) != true)) {
                    this.AccountNameKeyField = value;
                    this.RaisePropertyChanged("AccountNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountOwner {
            get {
                return this.AccountOwnerField;
            }
            set {
                if ((this.AccountOwnerField.Equals(value) != true)) {
                    this.AccountOwnerField = value;
                    this.RaisePropertyChanged("AccountOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountURL {
            get {
                return this.AccountURLField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountURLField, value) != true)) {
                    this.AccountURLField = value;
                    this.RaisePropertyChanged("AccountURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInvitation", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class UserInvitation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountLogoUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvitationKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountLogoUrl {
            get {
                return this.AccountLogoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountLogoUrlField, value) != true)) {
                    this.AccountLogoUrlField = value;
                    this.RaisePropertyChanged("AccountLogoUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNameKey {
            get {
                return this.AccountNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameKeyField, value) != true)) {
                    this.AccountNameKeyField = value;
                    this.RaisePropertyChanged("AccountNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvitationKey {
            get {
                return this.InvitationKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.InvitationKeyField, value) != true)) {
                    this.InvitationKeyField = value;
                    this.RaisePropertyChanged("InvitationKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((this.OwnerField.Equals(value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPasswordResetClaim", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class UserPasswordResetClaim : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordClaimKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordClaimKey {
            get {
                return this.PasswordClaimKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordClaimKeyField, value) != true)) {
                    this.PasswordClaimKeyField = value;
                    this.RaisePropertyChanged("PasswordClaimKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCreditCardInfo", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Models")]
    [System.SerializableAttribute()]
    public partial class AccountCreditCardInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last4Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardBrand {
            get {
                return this.CardBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CardBrandField, value) != true)) {
                    this.CardBrandField = value;
                    this.RaisePropertyChanged("CardBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardDescription {
            get {
                return this.CardDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDescriptionField, value) != true)) {
                    this.CardDescriptionField = value;
                    this.RaisePropertyChanged("CardDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardName {
            get {
                return this.CardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNameField, value) != true)) {
                    this.CardNameField = value;
                    this.RaisePropertyChanged("CardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationDescription {
            get {
                return this.ExpirationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationDescriptionField, value) != true)) {
                    this.ExpirationDescriptionField = value;
                    this.RaisePropertyChanged("ExpirationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationMonth {
            get {
                return this.ExpirationMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationMonthField, value) != true)) {
                    this.ExpirationMonthField = value;
                    this.RaisePropertyChanged("ExpirationMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationYear {
            get {
                return this.ExpirationYearField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationYearField, value) != true)) {
                    this.ExpirationYearField = value;
                    this.RaisePropertyChanged("ExpirationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last4 {
            get {
                return this.Last4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Last4Field, value) != true)) {
                    this.Last4Field = value;
                    this.RaisePropertyChanged("Last4");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCapacity", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Capacity.Models")]
    [System.SerializableAttribute()]
    public partial class AccountCapacity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CategorizationsCountField;
        
        private int CategorizationsMaxField;
        
        private int CategorizationsPercentageUsedField;
        
        private int CategorizationsRemainingField;
        
        private int CustomImageFormatsCountField;
        
        private int CustomImageFormatsMaxField;
        
        private int CustomImageFormatsPercentageUsedField;
        
        private int CustomImageFormatsRemainingField;
        
        private int CustomImageGalleriesCountField;
        
        private int CustomImageGalleriesMaxField;
        
        private int CustomImageGalleriesPercentageUsedField;
        
        private int CustomImageGalleriesRemainingField;
        
        private int CustomImageGroupsCountField;
        
        private int CustomImageGroupsMaxField;
        
        private int CustomImageGroupsPercentageUsedField;
        
        private int CustomImageGroupsRemainingField;
        
        private int ImagesPerGalleryMaxField;
        
        private int ProductsCountField;
        
        private int ProductsMaxField;
        
        private int ProductsPercentageUsedField;
        
        private int ProductsRemainingField;
        
        private int PropertiesCountField;
        
        private int PropertiesMaxField;
        
        private int PropertiesPercentageUsedField;
        
        private int PropertiesRemainingField;
        
        private int TagsCountField;
        
        private int TagsMaxField;
        
        private int TagsPercentageUsedField;
        
        private int TagsRemainingField;
        
        private int UsersCountField;
        
        private int UsersMaxField;
        
        private int UsersPercentageUsedField;
        
        private int UsersRemainingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategorizationsCount {
            get {
                return this.CategorizationsCountField;
            }
            set {
                if ((this.CategorizationsCountField.Equals(value) != true)) {
                    this.CategorizationsCountField = value;
                    this.RaisePropertyChanged("CategorizationsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategorizationsMax {
            get {
                return this.CategorizationsMaxField;
            }
            set {
                if ((this.CategorizationsMaxField.Equals(value) != true)) {
                    this.CategorizationsMaxField = value;
                    this.RaisePropertyChanged("CategorizationsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategorizationsPercentageUsed {
            get {
                return this.CategorizationsPercentageUsedField;
            }
            set {
                if ((this.CategorizationsPercentageUsedField.Equals(value) != true)) {
                    this.CategorizationsPercentageUsedField = value;
                    this.RaisePropertyChanged("CategorizationsPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategorizationsRemaining {
            get {
                return this.CategorizationsRemainingField;
            }
            set {
                if ((this.CategorizationsRemainingField.Equals(value) != true)) {
                    this.CategorizationsRemainingField = value;
                    this.RaisePropertyChanged("CategorizationsRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageFormatsCount {
            get {
                return this.CustomImageFormatsCountField;
            }
            set {
                if ((this.CustomImageFormatsCountField.Equals(value) != true)) {
                    this.CustomImageFormatsCountField = value;
                    this.RaisePropertyChanged("CustomImageFormatsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageFormatsMax {
            get {
                return this.CustomImageFormatsMaxField;
            }
            set {
                if ((this.CustomImageFormatsMaxField.Equals(value) != true)) {
                    this.CustomImageFormatsMaxField = value;
                    this.RaisePropertyChanged("CustomImageFormatsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageFormatsPercentageUsed {
            get {
                return this.CustomImageFormatsPercentageUsedField;
            }
            set {
                if ((this.CustomImageFormatsPercentageUsedField.Equals(value) != true)) {
                    this.CustomImageFormatsPercentageUsedField = value;
                    this.RaisePropertyChanged("CustomImageFormatsPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageFormatsRemaining {
            get {
                return this.CustomImageFormatsRemainingField;
            }
            set {
                if ((this.CustomImageFormatsRemainingField.Equals(value) != true)) {
                    this.CustomImageFormatsRemainingField = value;
                    this.RaisePropertyChanged("CustomImageFormatsRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGalleriesCount {
            get {
                return this.CustomImageGalleriesCountField;
            }
            set {
                if ((this.CustomImageGalleriesCountField.Equals(value) != true)) {
                    this.CustomImageGalleriesCountField = value;
                    this.RaisePropertyChanged("CustomImageGalleriesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGalleriesMax {
            get {
                return this.CustomImageGalleriesMaxField;
            }
            set {
                if ((this.CustomImageGalleriesMaxField.Equals(value) != true)) {
                    this.CustomImageGalleriesMaxField = value;
                    this.RaisePropertyChanged("CustomImageGalleriesMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGalleriesPercentageUsed {
            get {
                return this.CustomImageGalleriesPercentageUsedField;
            }
            set {
                if ((this.CustomImageGalleriesPercentageUsedField.Equals(value) != true)) {
                    this.CustomImageGalleriesPercentageUsedField = value;
                    this.RaisePropertyChanged("CustomImageGalleriesPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGalleriesRemaining {
            get {
                return this.CustomImageGalleriesRemainingField;
            }
            set {
                if ((this.CustomImageGalleriesRemainingField.Equals(value) != true)) {
                    this.CustomImageGalleriesRemainingField = value;
                    this.RaisePropertyChanged("CustomImageGalleriesRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGroupsCount {
            get {
                return this.CustomImageGroupsCountField;
            }
            set {
                if ((this.CustomImageGroupsCountField.Equals(value) != true)) {
                    this.CustomImageGroupsCountField = value;
                    this.RaisePropertyChanged("CustomImageGroupsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGroupsMax {
            get {
                return this.CustomImageGroupsMaxField;
            }
            set {
                if ((this.CustomImageGroupsMaxField.Equals(value) != true)) {
                    this.CustomImageGroupsMaxField = value;
                    this.RaisePropertyChanged("CustomImageGroupsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGroupsPercentageUsed {
            get {
                return this.CustomImageGroupsPercentageUsedField;
            }
            set {
                if ((this.CustomImageGroupsPercentageUsedField.Equals(value) != true)) {
                    this.CustomImageGroupsPercentageUsedField = value;
                    this.RaisePropertyChanged("CustomImageGroupsPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomImageGroupsRemaining {
            get {
                return this.CustomImageGroupsRemainingField;
            }
            set {
                if ((this.CustomImageGroupsRemainingField.Equals(value) != true)) {
                    this.CustomImageGroupsRemainingField = value;
                    this.RaisePropertyChanged("CustomImageGroupsRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ImagesPerGalleryMax {
            get {
                return this.ImagesPerGalleryMaxField;
            }
            set {
                if ((this.ImagesPerGalleryMaxField.Equals(value) != true)) {
                    this.ImagesPerGalleryMaxField = value;
                    this.RaisePropertyChanged("ImagesPerGalleryMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductsCount {
            get {
                return this.ProductsCountField;
            }
            set {
                if ((this.ProductsCountField.Equals(value) != true)) {
                    this.ProductsCountField = value;
                    this.RaisePropertyChanged("ProductsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductsMax {
            get {
                return this.ProductsMaxField;
            }
            set {
                if ((this.ProductsMaxField.Equals(value) != true)) {
                    this.ProductsMaxField = value;
                    this.RaisePropertyChanged("ProductsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductsPercentageUsed {
            get {
                return this.ProductsPercentageUsedField;
            }
            set {
                if ((this.ProductsPercentageUsedField.Equals(value) != true)) {
                    this.ProductsPercentageUsedField = value;
                    this.RaisePropertyChanged("ProductsPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductsRemaining {
            get {
                return this.ProductsRemainingField;
            }
            set {
                if ((this.ProductsRemainingField.Equals(value) != true)) {
                    this.ProductsRemainingField = value;
                    this.RaisePropertyChanged("ProductsRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PropertiesCount {
            get {
                return this.PropertiesCountField;
            }
            set {
                if ((this.PropertiesCountField.Equals(value) != true)) {
                    this.PropertiesCountField = value;
                    this.RaisePropertyChanged("PropertiesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PropertiesMax {
            get {
                return this.PropertiesMaxField;
            }
            set {
                if ((this.PropertiesMaxField.Equals(value) != true)) {
                    this.PropertiesMaxField = value;
                    this.RaisePropertyChanged("PropertiesMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PropertiesPercentageUsed {
            get {
                return this.PropertiesPercentageUsedField;
            }
            set {
                if ((this.PropertiesPercentageUsedField.Equals(value) != true)) {
                    this.PropertiesPercentageUsedField = value;
                    this.RaisePropertyChanged("PropertiesPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PropertiesRemaining {
            get {
                return this.PropertiesRemainingField;
            }
            set {
                if ((this.PropertiesRemainingField.Equals(value) != true)) {
                    this.PropertiesRemainingField = value;
                    this.RaisePropertyChanged("PropertiesRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TagsCount {
            get {
                return this.TagsCountField;
            }
            set {
                if ((this.TagsCountField.Equals(value) != true)) {
                    this.TagsCountField = value;
                    this.RaisePropertyChanged("TagsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TagsMax {
            get {
                return this.TagsMaxField;
            }
            set {
                if ((this.TagsMaxField.Equals(value) != true)) {
                    this.TagsMaxField = value;
                    this.RaisePropertyChanged("TagsMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TagsPercentageUsed {
            get {
                return this.TagsPercentageUsedField;
            }
            set {
                if ((this.TagsPercentageUsedField.Equals(value) != true)) {
                    this.TagsPercentageUsedField = value;
                    this.RaisePropertyChanged("TagsPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TagsRemaining {
            get {
                return this.TagsRemainingField;
            }
            set {
                if ((this.TagsRemainingField.Equals(value) != true)) {
                    this.TagsRemainingField = value;
                    this.RaisePropertyChanged("TagsRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UsersCount {
            get {
                return this.UsersCountField;
            }
            set {
                if ((this.UsersCountField.Equals(value) != true)) {
                    this.UsersCountField = value;
                    this.RaisePropertyChanged("UsersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UsersMax {
            get {
                return this.UsersMaxField;
            }
            set {
                if ((this.UsersMaxField.Equals(value) != true)) {
                    this.UsersMaxField = value;
                    this.RaisePropertyChanged("UsersMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UsersPercentageUsed {
            get {
                return this.UsersPercentageUsedField;
            }
            set {
                if ((this.UsersPercentageUsedField.Equals(value) != true)) {
                    this.UsersPercentageUsedField = value;
                    this.RaisePropertyChanged("UsersPercentageUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UsersRemaining {
            get {
                return this.UsersRemainingField;
            }
            set {
                if ((this.UsersRemainingField.Equals(value) != true)) {
                    this.UsersRemainingField = value;
                    this.RaisePropertyChanged("UsersRemaining");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsDocumentModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.DocumentModels")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsDocumentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.ContactSettingsModel ContactSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.SalesSettingsModel SalesSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelfLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.ContactSettingsModel ContactSettings {
            get {
                return this.ContactSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactSettingsField, value) != true)) {
                    this.ContactSettingsField = value;
                    this.RaisePropertyChanged("ContactSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomDomain {
            get {
                return this.CustomDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDomainField, value) != true)) {
                    this.CustomDomainField = value;
                    this.RaisePropertyChanged("CustomDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.SalesSettingsModel SalesSettings {
            get {
                return this.SalesSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesSettingsField, value) != true)) {
                    this.SalesSettingsField = value;
                    this.RaisePropertyChanged("SalesSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelfLink {
            get {
                return this.SelfLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.SelfLinkField, value) != true)) {
                    this.SelfLinkField = value;
                    this.RaisePropertyChanged("SelfLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactSettingsModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.DocumentModels")]
    [System.SerializableAttribute()]
    public partial class ContactSettingsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.ContactInfoModel ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowPhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.ContactInfoModel ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowAddress {
            get {
                return this.ShowAddressField;
            }
            set {
                if ((this.ShowAddressField.Equals(value) != true)) {
                    this.ShowAddressField = value;
                    this.RaisePropertyChanged("ShowAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowEmail {
            get {
                return this.ShowEmailField;
            }
            set {
                if ((this.ShowEmailField.Equals(value) != true)) {
                    this.ShowEmailField = value;
                    this.RaisePropertyChanged("ShowEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowPhoneNumber {
            get {
                return this.ShowPhoneNumberField;
            }
            set {
                if ((this.ShowPhoneNumberField.Equals(value) != true)) {
                    this.ShowPhoneNumberField = value;
                    this.RaisePropertyChanged("ShowPhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesSettingsModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.DocumentModels")]
    [System.SerializableAttribute()]
    public partial class SalesSettingsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AlertEmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ButtonCopyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionCopyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LeadLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSalesAlertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSalesLeadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AlertEmails {
            get {
                return this.AlertEmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertEmailsField, value) != true)) {
                    this.AlertEmailsField = value;
                    this.RaisePropertyChanged("AlertEmails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ButtonCopy {
            get {
                return this.ButtonCopyField;
            }
            set {
                if ((object.ReferenceEquals(this.ButtonCopyField, value) != true)) {
                    this.ButtonCopyField = value;
                    this.RaisePropertyChanged("ButtonCopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionCopy {
            get {
                return this.DescriptionCopyField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionCopyField, value) != true)) {
                    this.DescriptionCopyField = value;
                    this.RaisePropertyChanged("DescriptionCopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LeadLabels {
            get {
                return this.LeadLabelsField;
            }
            set {
                if ((object.ReferenceEquals(this.LeadLabelsField, value) != true)) {
                    this.LeadLabelsField = value;
                    this.RaisePropertyChanged("LeadLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSalesAlerts {
            get {
                return this.UseSalesAlertsField;
            }
            set {
                if ((this.UseSalesAlertsField.Equals(value) != true)) {
                    this.UseSalesAlertsField = value;
                    this.RaisePropertyChanged("UseSalesAlerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSalesLeads {
            get {
                return this.UseSalesLeadsField;
            }
            set {
                if ((this.UseSalesLeadsField.Equals(value) != true)) {
                    this.UseSalesLeadsField = value;
                    this.RaisePropertyChanged("UseSalesLeads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfoModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.DocumentModels")]
    [System.SerializableAttribute()]
    public partial class ContactInfoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThemeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Themes.Models")]
    [System.SerializableAttribute()]
    public partial class ThemeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlatformAdminSite.AccountManagementService.ThemeColorsModel ColorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformAdminSite.AccountManagementService.ThemeColorsModel Colors {
            get {
                return this.ColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorsField, value) != true)) {
                    this.ColorsField = value;
                    this.RaisePropertyChanged("Colors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Font {
            get {
                return this.FontField;
            }
            set {
                if ((object.ReferenceEquals(this.FontField, value) != true)) {
                    this.FontField = value;
                    this.RaisePropertyChanged("Font");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThemeColorsModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.Themes.Models")]
    [System.SerializableAttribute()]
    public partial class ThemeColorsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundGradianetTopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundGradientBottomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForegroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HighlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShadowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrimField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Background {
            get {
                return this.BackgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundField, value) != true)) {
                    this.BackgroundField = value;
                    this.RaisePropertyChanged("Background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundGradianetTop {
            get {
                return this.BackgroundGradianetTopField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundGradianetTopField, value) != true)) {
                    this.BackgroundGradianetTopField = value;
                    this.RaisePropertyChanged("BackgroundGradianetTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundGradientBottom {
            get {
                return this.BackgroundGradientBottomField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundGradientBottomField, value) != true)) {
                    this.BackgroundGradientBottomField = value;
                    this.RaisePropertyChanged("BackgroundGradientBottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foreground {
            get {
                return this.ForegroundField;
            }
            set {
                if ((object.ReferenceEquals(this.ForegroundField, value) != true)) {
                    this.ForegroundField = value;
                    this.RaisePropertyChanged("Foreground");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Highlight {
            get {
                return this.HighlightField;
            }
            set {
                if ((object.ReferenceEquals(this.HighlightField, value) != true)) {
                    this.HighlightField = value;
                    this.RaisePropertyChanged("Highlight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shadow {
            get {
                return this.ShadowField;
            }
            set {
                if ((object.ReferenceEquals(this.ShadowField, value) != true)) {
                    this.ShadowField = value;
                    this.RaisePropertyChanged("Shadow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Trim {
            get {
                return this.TrimField;
            }
            set {
                if ((object.ReferenceEquals(this.TrimField, value) != true)) {
                    this.TrimField = value;
                    this.RaisePropertyChanged("Trim");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountActivityLog", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Logging.AccountLogs.Models")]
    [System.SerializableAttribute()]
    public partial class AccountActivityLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectIDField, value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectName {
            get {
                return this.ObjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNameField, value) != true)) {
                    this.ObjectNameField = value;
                    this.RaisePropertyChanged("ObjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountManagementService.IAccountManagementService")]
    public interface IAccountManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccounts", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountsResponse")]
        PlatformAdminSite.AccountManagementService.Account[] GetAccounts(int pageNumber, int pageSize, string orderBy, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccounts", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> GetAccountsAsync(int pageNumber, int pageSize, string orderBy, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountsByFilter", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountsByFilterResponse")]
        PlatformAdminSite.AccountManagementService.Account[] GetAccountsByFilter(string columnName, string value, int pageNumber, int pageSize, string orderBy, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountsByFilter", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountsByFilterResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> GetAccountsByFilterAsync(string columnName, string value, int pageNumber, int pageSize, string orderBy, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/SearchAccounts", ReplyAction="http://tempuri.org/IAccountManagementService/SearchAccountsResponse")]
        PlatformAdminSite.AccountManagementService.Account[] SearchAccounts(string query, int maxResults, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/SearchAccounts", ReplyAction="http://tempuri.org/IAccountManagementService/SearchAccountsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> SearchAccountsAsync(string query, int maxResults, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCount", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCountResponse")]
        int GetAccountCount(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCount", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCountResponse")]
        System.Threading.Tasks.Task<int> GetAccountCountAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCountByFilter", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCountByFilterResponse")]
        int GetAccountCountByFilter(string columnName, string value, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCountByFilter", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCountByFilterResponse")]
        System.Threading.Tasks.Task<int> GetAccountCountByFilterAsync(string columnName, string value, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccount", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountResponse")]
        PlatformAdminSite.AccountManagementService.Account GetAccount(string id, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccount", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account> GetAccountAsync(string id, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountName", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountNameResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountName(string accountId, string newAccountName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountName", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountNameResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountNameAsync(string accountId, string newAccountName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ConvertToAccountNameKey", ReplyAction="http://tempuri.org/IAccountManagementService/ConvertToAccountNameKeyResponse")]
        string ConvertToAccountNameKey(string accountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ConvertToAccountNameKey", ReplyAction="http://tempuri.org/IAccountManagementService/ConvertToAccountNameKeyResponse")]
        System.Threading.Tasks.Task<string> ConvertToAccountNameKeyAsync(string accountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CreateAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/CreateAccountUserResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType CreateAccountUser(string accountId, string email, string firstName, string lastName, string password, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CreateAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/CreateAccountUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CreateAccountUserAsync(string accountId, string email, string firstName, string lastName, string password, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUsers", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUsersResponse")]
        PlatformAdminSite.AccountManagementService.AccountUser[] GetAccountUsers(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUsers", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUsersResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountUser[]> GetAccountUsersAsync(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserResponse")]
        PlatformAdminSite.AccountManagementService.AccountUser GetAccountUser(string userId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountUser> GetAccountUserAsync(string userId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAllAccountsForEmail", ReplyAction="http://tempuri.org/IAccountManagementService/GetAllAccountsForEmailResponse")]
        PlatformAdminSite.AccountManagementService.UserAccount[] GetAllAccountsForEmail(string email, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAllAccountsForEmail", ReplyAction="http://tempuri.org/IAccountManagementService/GetAllAccountsForEmailResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserAccount[]> GetAllAccountsForEmailAsync(string email, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserRoles", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserRolesResponse")]
        string[] GetAccountUserRoles(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserRoles", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountUserRolesAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DeleteAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/DeleteAccountUserResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType DeleteAccountUser(string accountId, string userId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DeleteAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/DeleteAccountUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> DeleteAccountUserAsync(string accountId, string userId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserRole", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserRoleResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserRole(string accountId, string userId, string newRole, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserRole", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserRoleResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserRoleAsync(string accountId, string userId, string newRole, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserFullName", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserFullNameResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserFullName(string accountId, string userId, string newFirstName, string newLastName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserFullName", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserFullNameResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserFullNameAsync(string accountId, string userId, string newFirstName, string newLastName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountOwnershipStatus", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountOwnershipStatusResponse" +
            "")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountOwnershipStatus(string accountId, string userId, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountOwnershipStatus", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountOwnershipStatusResponse" +
            "")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountOwnershipStatusAsync(string accountId, string userId, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserActiveState", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserActiveStateResponse" +
            "")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserActiveState(string accountId, string userId, bool isActive, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserActiveState", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserActiveStateResponse" +
            "")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserActiveStateAsync(string accountId, string userId, bool isActive, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserEmail", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserEmailResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserEmail(string accountId, string userId, string newEmail, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserEmail", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserEmailResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserEmailAsync(string accountId, string userId, string newEmail, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserProfilePhoto", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserProfilePhotoRespons" +
            "e")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserProfilePhoto(string accountId, string userId, byte[] imageByteArray, string requesterID, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserProfilePhoto", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserProfilePhotoRespons" +
            "e")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserProfilePhotoAsync(string accountId, string userId, byte[] imageByteArray, string requesterID, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/InviteAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/InviteAccountUserResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType InviteAccountUser(string accountId, string email, string firstName, string lastName, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/InviteAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/InviteAccountUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> InviteAccountUserAsync(string accountId, string email, string firstName, string lastName, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserInvitations", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserInvitationsResponse")]
        PlatformAdminSite.AccountManagementService.UserInvitation[] GetAccountUserInvitations(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserInvitations", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserInvitationsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserInvitation[]> GetAccountUserInvitationsAsync(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserInvitationResponse")]
        PlatformAdminSite.AccountManagementService.UserInvitation GetAccountUserInvitation(string accountAttribute, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountUserInvitationResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserInvitation> GetAccountUserInvitationAsync(string accountAttribute, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DeleteAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/DeleteAccountUserInvitationResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType DeleteAccountUserInvitation(string accountAttribute, string invitationKey, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DeleteAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/DeleteAccountUserInvitationResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> DeleteAccountUserInvitationAsync(string accountAttribute, string invitationKey, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ResendAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/ResendAccountUserInvitationResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType ResendAccountUserInvitation(string accountAttribute, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ResendAccountUserInvitation", ReplyAction="http://tempuri.org/IAccountManagementService/ResendAccountUserInvitationResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ResendAccountUserInvitationAsync(string accountAttribute, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/RegisterInvitedAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/RegisterInvitedAccountUserResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType RegisterInvitedAccountUser(string accountAttribute, string email, string firstName, string lastName, string password, string role, bool isOwner, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/RegisterInvitedAccountUser", ReplyAction="http://tempuri.org/IAccountManagementService/RegisterInvitedAccountUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> RegisterInvitedAccountUserAsync(string accountAttribute, string email, string firstName, string lastName, string password, string role, bool isOwner, string invitationKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserPassword", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserPasswordResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserPassword(string accountId, string email, string currentPassword, string newPassword, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountUserPassword", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountUserPasswordResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserPasswordAsync(string accountId, string email, string currentPassword, string newPassword, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ClaimLostPassword", ReplyAction="http://tempuri.org/IAccountManagementService/ClaimLostPasswordResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType ClaimLostPassword(string accountAttribute, string email, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ClaimLostPassword", ReplyAction="http://tempuri.org/IAccountManagementService/ClaimLostPasswordResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ClaimLostPasswordAsync(string accountAttribute, string email, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetLostPasswordClaims", ReplyAction="http://tempuri.org/IAccountManagementService/GetLostPasswordClaimsResponse")]
        PlatformAdminSite.AccountManagementService.UserPasswordResetClaim[] GetLostPasswordClaims(string accountAttribute, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetLostPasswordClaims", ReplyAction="http://tempuri.org/IAccountManagementService/GetLostPasswordClaimsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserPasswordResetClaim[]> GetLostPasswordClaimsAsync(string accountAttribute, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetLostPasswordClaim", ReplyAction="http://tempuri.org/IAccountManagementService/GetLostPasswordClaimResponse")]
        string GetLostPasswordClaim(string accountAttribute, string passwordClaimKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetLostPasswordClaim", ReplyAction="http://tempuri.org/IAccountManagementService/GetLostPasswordClaimResponse")]
        System.Threading.Tasks.Task<string> GetLostPasswordClaimAsync(string accountAttribute, string passwordClaimKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ResetLostPassword", ReplyAction="http://tempuri.org/IAccountManagementService/ResetLostPasswordResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType ResetLostPassword(string accountAttribute, string passwordClaimKey, string newPassword, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ResetLostPassword", ReplyAction="http://tempuri.org/IAccountManagementService/ResetLostPasswordResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ResetLostPasswordAsync(string accountAttribute, string passwordClaimKey, string newPassword, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetCreditCardInfo", ReplyAction="http://tempuri.org/IAccountManagementService/GetCreditCardInfoResponse")]
        PlatformAdminSite.AccountManagementService.AccountCreditCardInfo GetCreditCardInfo(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetCreditCardInfo", ReplyAction="http://tempuri.org/IAccountManagementService/GetCreditCardInfoResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountCreditCardInfo> GetCreditCardInfoAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/AddUpdateCreditCard", ReplyAction="http://tempuri.org/IAccountManagementService/AddUpdateCreditCardResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType AddUpdateCreditCard(string accountId, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/AddUpdateCreditCard", ReplyAction="http://tempuri.org/IAccountManagementService/AddUpdateCreditCardResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> AddUpdateCreditCardAsync(string accountId, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CreateSubscripton", ReplyAction="http://tempuri.org/IAccountManagementService/CreateSubscriptonResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType CreateSubscripton(string accountId, string planName, string frequencyMonths, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CreateSubscripton", ReplyAction="http://tempuri.org/IAccountManagementService/CreateSubscriptonResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CreateSubscriptonAsync(string accountId, string planName, string frequencyMonths, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountPlan", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountPlanResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountPlan(string accountId, string planName, string frequencyMonths, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountPlan", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountPlanResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountPlanAsync(string accountId, string planName, string frequencyMonths, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCapacity", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCapacityResponse")]
        PlatformAdminSite.AccountManagementService.AccountCapacity GetAccountCapacity(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountCapacity", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountCapacityResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountCapacity> GetAccountCapacityAsync(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountSettings", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountSettingsResponse")]
        PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel GetAccountSettings(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountSettings", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountSettingsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel> GetAccountSettingsAsync(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountSettings", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountSettingsResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountSettings(string accountNameKey, PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel accountSettingsDocumentModel, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountSettings", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountSettingsResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountSettingsAsync(string accountNameKey, PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel accountSettingsDocumentModel, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetThemes", ReplyAction="http://tempuri.org/IAccountManagementService/GetThemesResponse")]
        PlatformAdminSite.AccountManagementService.ThemeModel[] GetThemes(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetThemes", ReplyAction="http://tempuri.org/IAccountManagementService/GetThemesResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.ThemeModel[]> GetThemesAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLog", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogResponse")]
        PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLog(string accountId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLog", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogAsync(string accountId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByCategory", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByCategoryResponse")]
        PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByCategory(string accountId, string categoryType, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByCategory", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByCategoryResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByCategoryAsync(string accountId, string categoryType, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByActivity", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByActivityResponse")]
        PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByActivity(string accountId, string activityType, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByActivity", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByActivityResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByActivityAsync(string accountId, string activityType, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByUser", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByUserResponse")]
        PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByUser(string accountId, string userId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByUser", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByUserResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByUserAsync(string accountId, string userId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByObject", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByObjectResponse")]
        PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByObject(string accountId, string objectId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogByObject", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogByObjectResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByObjectAsync(string accountId, string objectId, int maxRecords, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogCategories", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogCategoriesResponse")]
        string[] GetAccountLogCategories(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogCategories", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountLogCategoriesAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogActivities", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogActivitiesResponse")]
        string[] GetAccountLogActivities(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/GetAccountLogActivities", ReplyAction="http://tempuri.org/IAccountManagementService/GetAccountLogActivitiesResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountLogActivitiesAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CloseUnprovisionedAccount", ReplyAction="http://tempuri.org/IAccountManagementService/CloseUnprovisionedAccountResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType CloseUnprovisionedAccount(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CloseUnprovisionedAccount", ReplyAction="http://tempuri.org/IAccountManagementService/CloseUnprovisionedAccountResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CloseUnprovisionedAccountAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CloseAccount", ReplyAction="http://tempuri.org/IAccountManagementService/CloseAccountResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType CloseAccount(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/CloseAccount", ReplyAction="http://tempuri.org/IAccountManagementService/CloseAccountResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CloseAccountAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ReactivateSubscription", ReplyAction="http://tempuri.org/IAccountManagementService/ReactivateSubscriptionResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType ReactivateSubscription(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/ReactivateSubscription", ReplyAction="http://tempuri.org/IAccountManagementService/ReactivateSubscriptionResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ReactivateSubscriptionAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DoesAccountRequireClosureApproval", ReplyAction="http://tempuri.org/IAccountManagementService/DoesAccountRequireClosureApprovalRes" +
            "ponse")]
        bool DoesAccountRequireClosureApproval(string acountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/DoesAccountRequireClosureApproval", ReplyAction="http://tempuri.org/IAccountManagementService/DoesAccountRequireClosureApprovalRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> DoesAccountRequireClosureApprovalAsync(string acountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountClosureApproval", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountClosureApprovalResponse" +
            "")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountClosureApproval(string accountId, bool isApproved, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/UpdateAccountClosureApproval", ReplyAction="http://tempuri.org/IAccountManagementService/UpdateAccountClosureApprovalResponse" +
            "")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountClosureApprovalAsync(string accountId, bool isApproved, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/AccelerateAccountClosure", ReplyAction="http://tempuri.org/IAccountManagementService/AccelerateAccountClosureResponse")]
        PlatformAdminSite.AccountManagementService.DataAccessResponseType AccelerateAccountClosure(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManagementService/AccelerateAccountClosure", ReplyAction="http://tempuri.org/IAccountManagementService/AccelerateAccountClosureResponse")]
        System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> AccelerateAccountClosureAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountManagementServiceChannel : PlatformAdminSite.AccountManagementService.IAccountManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountManagementServiceClient : System.ServiceModel.ClientBase<PlatformAdminSite.AccountManagementService.IAccountManagementService>, PlatformAdminSite.AccountManagementService.IAccountManagementService {
        
        public AccountManagementServiceClient() {
        }
        
        public AccountManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PlatformAdminSite.AccountManagementService.Account[] GetAccounts(int pageNumber, int pageSize, string orderBy, string sharedClientKey) {
            return base.Channel.GetAccounts(pageNumber, pageSize, orderBy, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> GetAccountsAsync(int pageNumber, int pageSize, string orderBy, string sharedClientKey) {
            return base.Channel.GetAccountsAsync(pageNumber, pageSize, orderBy, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.Account[] GetAccountsByFilter(string columnName, string value, int pageNumber, int pageSize, string orderBy, string sharedClientKey) {
            return base.Channel.GetAccountsByFilter(columnName, value, pageNumber, pageSize, orderBy, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> GetAccountsByFilterAsync(string columnName, string value, int pageNumber, int pageSize, string orderBy, string sharedClientKey) {
            return base.Channel.GetAccountsByFilterAsync(columnName, value, pageNumber, pageSize, orderBy, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.Account[] SearchAccounts(string query, int maxResults, string sharedClientKey) {
            return base.Channel.SearchAccounts(query, maxResults, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account[]> SearchAccountsAsync(string query, int maxResults, string sharedClientKey) {
            return base.Channel.SearchAccountsAsync(query, maxResults, sharedClientKey);
        }
        
        public int GetAccountCount(string sharedClientKey) {
            return base.Channel.GetAccountCount(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountCountAsync(string sharedClientKey) {
            return base.Channel.GetAccountCountAsync(sharedClientKey);
        }
        
        public int GetAccountCountByFilter(string columnName, string value, string sharedClientKey) {
            return base.Channel.GetAccountCountByFilter(columnName, value, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountCountByFilterAsync(string columnName, string value, string sharedClientKey) {
            return base.Channel.GetAccountCountByFilterAsync(columnName, value, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.Account GetAccount(string id, string sharedClientKey) {
            return base.Channel.GetAccount(id, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.Account> GetAccountAsync(string id, string sharedClientKey) {
            return base.Channel.GetAccountAsync(id, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountName(string accountId, string newAccountName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountName(accountId, newAccountName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountNameAsync(string accountId, string newAccountName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountNameAsync(accountId, newAccountName, requesterId, requesterType, sharedClientKey);
        }
        
        public string ConvertToAccountNameKey(string accountName) {
            return base.Channel.ConvertToAccountNameKey(accountName);
        }
        
        public System.Threading.Tasks.Task<string> ConvertToAccountNameKeyAsync(string accountName) {
            return base.Channel.ConvertToAccountNameKeyAsync(accountName);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType CreateAccountUser(string accountId, string email, string firstName, string lastName, string password, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateAccountUser(accountId, email, firstName, lastName, password, roleName, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CreateAccountUserAsync(string accountId, string email, string firstName, string lastName, string password, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateAccountUserAsync(accountId, email, firstName, lastName, password, roleName, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountUser[] GetAccountUsers(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountUsers(accountId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountUser[]> GetAccountUsersAsync(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountUsersAsync(accountId, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountUser GetAccountUser(string userId, string sharedClientKey) {
            return base.Channel.GetAccountUser(userId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountUser> GetAccountUserAsync(string userId, string sharedClientKey) {
            return base.Channel.GetAccountUserAsync(userId, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.UserAccount[] GetAllAccountsForEmail(string email, string sharedClientKey) {
            return base.Channel.GetAllAccountsForEmail(email, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserAccount[]> GetAllAccountsForEmailAsync(string email, string sharedClientKey) {
            return base.Channel.GetAllAccountsForEmailAsync(email, sharedClientKey);
        }
        
        public string[] GetAccountUserRoles(string sharedClientKey) {
            return base.Channel.GetAccountUserRoles(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountUserRolesAsync(string sharedClientKey) {
            return base.Channel.GetAccountUserRolesAsync(sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType DeleteAccountUser(string accountId, string userId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteAccountUser(accountId, userId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> DeleteAccountUserAsync(string accountId, string userId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteAccountUserAsync(accountId, userId, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserRole(string accountId, string userId, string newRole, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserRole(accountId, userId, newRole, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserRoleAsync(string accountId, string userId, string newRole, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserRoleAsync(accountId, userId, newRole, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserFullName(string accountId, string userId, string newFirstName, string newLastName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserFullName(accountId, userId, newFirstName, newLastName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserFullNameAsync(string accountId, string userId, string newFirstName, string newLastName, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserFullNameAsync(accountId, userId, newFirstName, newLastName, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountOwnershipStatus(string accountId, string userId, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountOwnershipStatus(accountId, userId, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountOwnershipStatusAsync(string accountId, string userId, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountOwnershipStatusAsync(accountId, userId, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserActiveState(string accountId, string userId, bool isActive, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserActiveState(accountId, userId, isActive, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserActiveStateAsync(string accountId, string userId, bool isActive, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserActiveStateAsync(accountId, userId, isActive, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserEmail(string accountId, string userId, string newEmail, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserEmail(accountId, userId, newEmail, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserEmailAsync(string accountId, string userId, string newEmail, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserEmailAsync(accountId, userId, newEmail, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserProfilePhoto(string accountId, string userId, byte[] imageByteArray, string requesterID, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserProfilePhoto(accountId, userId, imageByteArray, requesterID, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserProfilePhotoAsync(string accountId, string userId, byte[] imageByteArray, string requesterID, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserProfilePhotoAsync(accountId, userId, imageByteArray, requesterID, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType InviteAccountUser(string accountId, string email, string firstName, string lastName, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.InviteAccountUser(accountId, email, firstName, lastName, roleName, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> InviteAccountUserAsync(string accountId, string email, string firstName, string lastName, string roleName, bool isOwner, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.InviteAccountUserAsync(accountId, email, firstName, lastName, roleName, isOwner, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.UserInvitation[] GetAccountUserInvitations(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountUserInvitations(accountId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserInvitation[]> GetAccountUserInvitationsAsync(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountUserInvitationsAsync(accountId, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.UserInvitation GetAccountUserInvitation(string accountAttribute, string invitationKey, string sharedClientKey) {
            return base.Channel.GetAccountUserInvitation(accountAttribute, invitationKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserInvitation> GetAccountUserInvitationAsync(string accountAttribute, string invitationKey, string sharedClientKey) {
            return base.Channel.GetAccountUserInvitationAsync(accountAttribute, invitationKey, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType DeleteAccountUserInvitation(string accountAttribute, string invitationKey, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteAccountUserInvitation(accountAttribute, invitationKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> DeleteAccountUserInvitationAsync(string accountAttribute, string invitationKey, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteAccountUserInvitationAsync(accountAttribute, invitationKey, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType ResendAccountUserInvitation(string accountAttribute, string invitationKey, string sharedClientKey) {
            return base.Channel.ResendAccountUserInvitation(accountAttribute, invitationKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ResendAccountUserInvitationAsync(string accountAttribute, string invitationKey, string sharedClientKey) {
            return base.Channel.ResendAccountUserInvitationAsync(accountAttribute, invitationKey, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType RegisterInvitedAccountUser(string accountAttribute, string email, string firstName, string lastName, string password, string role, bool isOwner, string invitationKey, string sharedClientKey) {
            return base.Channel.RegisterInvitedAccountUser(accountAttribute, email, firstName, lastName, password, role, isOwner, invitationKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> RegisterInvitedAccountUserAsync(string accountAttribute, string email, string firstName, string lastName, string password, string role, bool isOwner, string invitationKey, string sharedClientKey) {
            return base.Channel.RegisterInvitedAccountUserAsync(accountAttribute, email, firstName, lastName, password, role, isOwner, invitationKey, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountUserPassword(string accountId, string email, string currentPassword, string newPassword, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserPassword(accountId, email, currentPassword, newPassword, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountUserPasswordAsync(string accountId, string email, string currentPassword, string newPassword, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountUserPasswordAsync(accountId, email, currentPassword, newPassword, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType ClaimLostPassword(string accountAttribute, string email, string sharedClientKey) {
            return base.Channel.ClaimLostPassword(accountAttribute, email, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ClaimLostPasswordAsync(string accountAttribute, string email, string sharedClientKey) {
            return base.Channel.ClaimLostPasswordAsync(accountAttribute, email, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.UserPasswordResetClaim[] GetLostPasswordClaims(string accountAttribute, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GetLostPasswordClaims(accountAttribute, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.UserPasswordResetClaim[]> GetLostPasswordClaimsAsync(string accountAttribute, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GetLostPasswordClaimsAsync(accountAttribute, requesterId, requesterType, sharedClientKey);
        }
        
        public string GetLostPasswordClaim(string accountAttribute, string passwordClaimKey, string sharedClientKey) {
            return base.Channel.GetLostPasswordClaim(accountAttribute, passwordClaimKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string> GetLostPasswordClaimAsync(string accountAttribute, string passwordClaimKey, string sharedClientKey) {
            return base.Channel.GetLostPasswordClaimAsync(accountAttribute, passwordClaimKey, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType ResetLostPassword(string accountAttribute, string passwordClaimKey, string newPassword, string sharedClientKey) {
            return base.Channel.ResetLostPassword(accountAttribute, passwordClaimKey, newPassword, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ResetLostPasswordAsync(string accountAttribute, string passwordClaimKey, string newPassword, string sharedClientKey) {
            return base.Channel.ResetLostPasswordAsync(accountAttribute, passwordClaimKey, newPassword, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountCreditCardInfo GetCreditCardInfo(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GetCreditCardInfo(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountCreditCardInfo> GetCreditCardInfoAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GetCreditCardInfoAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType AddUpdateCreditCard(string accountId, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.AddUpdateCreditCard(accountId, cardName, cardNumber, cvc, expirationMonth, expirationYear, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> AddUpdateCreditCardAsync(string accountId, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.AddUpdateCreditCardAsync(accountId, cardName, cardNumber, cvc, expirationMonth, expirationYear, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType CreateSubscripton(string accountId, string planName, string frequencyMonths, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.CreateSubscripton(accountId, planName, frequencyMonths, cardName, cardNumber, cvc, expirationMonth, expirationYear, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CreateSubscriptonAsync(string accountId, string planName, string frequencyMonths, string cardName, string cardNumber, string cvc, string expirationMonth, string expirationYear, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.CreateSubscriptonAsync(accountId, planName, frequencyMonths, cardName, cardNumber, cvc, expirationMonth, expirationYear, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountPlan(string accountId, string planName, string frequencyMonths, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.UpdateAccountPlan(accountId, planName, frequencyMonths, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountPlanAsync(string accountId, string planName, string frequencyMonths, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string ipAddress, string origin, string sharedClientKey) {
            return base.Channel.UpdateAccountPlanAsync(accountId, planName, frequencyMonths, requesterId, requesterType, ipAddress, origin, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountCapacity GetAccountCapacity(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountCapacity(accountId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountCapacity> GetAccountCapacityAsync(string accountId, string sharedClientKey) {
            return base.Channel.GetAccountCapacityAsync(accountId, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel GetAccountSettings(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetAccountSettings(accountNameKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel> GetAccountSettingsAsync(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetAccountSettingsAsync(accountNameKey, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountSettings(string accountNameKey, PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel accountSettingsDocumentModel, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountSettings(accountNameKey, accountSettingsDocumentModel, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountSettingsAsync(string accountNameKey, PlatformAdminSite.AccountManagementService.AccountSettingsDocumentModel accountSettingsDocumentModel, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountSettingsAsync(accountNameKey, accountSettingsDocumentModel, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.ThemeModel[] GetThemes(string sharedClientKey) {
            return base.Channel.GetThemes(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.ThemeModel[]> GetThemesAsync(string sharedClientKey) {
            return base.Channel.GetThemesAsync(sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLog(string accountId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLog(accountId, maxRecords, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogAsync(string accountId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogAsync(accountId, maxRecords, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByCategory(string accountId, string categoryType, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByCategory(accountId, categoryType, maxRecords, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByCategoryAsync(string accountId, string categoryType, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByCategoryAsync(accountId, categoryType, maxRecords, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByActivity(string accountId, string activityType, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByActivity(accountId, activityType, maxRecords, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByActivityAsync(string accountId, string activityType, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByActivityAsync(accountId, activityType, maxRecords, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByUser(string accountId, string userId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByUser(accountId, userId, maxRecords, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByUserAsync(string accountId, string userId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByUserAsync(accountId, userId, maxRecords, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.AccountActivityLog[] GetAccountLogByObject(string accountId, string objectId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByObject(accountId, objectId, maxRecords, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.AccountActivityLog[]> GetAccountLogByObjectAsync(string accountId, string objectId, int maxRecords, string sharedClientKey) {
            return base.Channel.GetAccountLogByObjectAsync(accountId, objectId, maxRecords, sharedClientKey);
        }
        
        public string[] GetAccountLogCategories(string sharedClientKey) {
            return base.Channel.GetAccountLogCategories(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountLogCategoriesAsync(string sharedClientKey) {
            return base.Channel.GetAccountLogCategoriesAsync(sharedClientKey);
        }
        
        public string[] GetAccountLogActivities(string sharedClientKey) {
            return base.Channel.GetAccountLogActivities(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountLogActivitiesAsync(string sharedClientKey) {
            return base.Channel.GetAccountLogActivitiesAsync(sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType CloseUnprovisionedAccount(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CloseUnprovisionedAccount(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CloseUnprovisionedAccountAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CloseUnprovisionedAccountAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType CloseAccount(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CloseAccount(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> CloseAccountAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CloseAccountAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType ReactivateSubscription(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReactivateSubscription(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> ReactivateSubscriptionAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReactivateSubscriptionAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public bool DoesAccountRequireClosureApproval(string acountId) {
            return base.Channel.DoesAccountRequireClosureApproval(acountId);
        }
        
        public System.Threading.Tasks.Task<bool> DoesAccountRequireClosureApprovalAsync(string acountId) {
            return base.Channel.DoesAccountRequireClosureApprovalAsync(acountId);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType UpdateAccountClosureApproval(string accountId, bool isApproved, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountClosureApproval(accountId, isApproved, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> UpdateAccountClosureApprovalAsync(string accountId, bool isApproved, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateAccountClosureApprovalAsync(accountId, isApproved, requesterId, requesterType, sharedClientKey);
        }
        
        public PlatformAdminSite.AccountManagementService.DataAccessResponseType AccelerateAccountClosure(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.AccelerateAccountClosure(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<PlatformAdminSite.AccountManagementService.DataAccessResponseType> AccelerateAccountClosureAsync(string accountId, string requesterId, PlatformAdminSite.AccountManagementService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.AccelerateAccountClosureAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
    }
}
