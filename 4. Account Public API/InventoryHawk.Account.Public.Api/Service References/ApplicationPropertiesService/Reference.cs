//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryHawk.Account.Public.Api.ApplicationPropertiesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyTypeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Properties.Models" +
        "")]
    [System.SerializableAttribute()]
    public partial class PropertyTypeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyTypeNameKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyTypeDescription {
            get {
                return this.PropertyTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeDescriptionField, value) != true)) {
                    this.PropertyTypeDescriptionField = value;
                    this.RaisePropertyChanged("PropertyTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyTypeID {
            get {
                return this.PropertyTypeIDField;
            }
            set {
                if ((this.PropertyTypeIDField.Equals(value) != true)) {
                    this.PropertyTypeIDField = value;
                    this.RaisePropertyChanged("PropertyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyTypeName {
            get {
                return this.PropertyTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeNameField, value) != true)) {
                    this.PropertyTypeNameField = value;
                    this.RaisePropertyChanged("PropertyTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyTypeNameKey {
            get {
                return this.PropertyTypeNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeNameKeyField, value) != true)) {
                    this.PropertyTypeNameKeyField = value;
                    this.RaisePropertyChanged("PropertyTypeNameKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyListType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Properties.Models" +
        "")]
    public enum PropertyListType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Listings = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Details = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Featured = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Properties.Models" +
        "")]
    [System.SerializableAttribute()]
    public partial class PropertyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlwaysFacetableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AppendableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacetIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacetOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FacetableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeaturedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumericDescriptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyTypeNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SortableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertySwatchModel[] SwatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolPlacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyValueModel[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlwaysFacetable {
            get {
                return this.AlwaysFacetableField;
            }
            set {
                if ((this.AlwaysFacetableField.Equals(value) != true)) {
                    this.AlwaysFacetableField = value;
                    this.RaisePropertyChanged("AlwaysFacetable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Appendable {
            get {
                return this.AppendableField;
            }
            set {
                if ((this.AppendableField.Equals(value) != true)) {
                    this.AppendableField = value;
                    this.RaisePropertyChanged("Appendable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((this.DetailsField.Equals(value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacetInterval {
            get {
                return this.FacetIntervalField;
            }
            set {
                if ((this.FacetIntervalField.Equals(value) != true)) {
                    this.FacetIntervalField = value;
                    this.RaisePropertyChanged("FacetInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacetOrderID {
            get {
                return this.FacetOrderIDField;
            }
            set {
                if ((this.FacetOrderIDField.Equals(value) != true)) {
                    this.FacetOrderIDField = value;
                    this.RaisePropertyChanged("FacetOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Facetable {
            get {
                return this.FacetableField;
            }
            set {
                if ((this.FacetableField.Equals(value) != true)) {
                    this.FacetableField = value;
                    this.RaisePropertyChanged("Facetable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeaturedID {
            get {
                return this.FeaturedIDField;
            }
            set {
                if ((this.FeaturedIDField.Equals(value) != true)) {
                    this.FeaturedIDField = value;
                    this.RaisePropertyChanged("FeaturedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Listing {
            get {
                return this.ListingField;
            }
            set {
                if ((this.ListingField.Equals(value) != true)) {
                    this.ListingField = value;
                    this.RaisePropertyChanged("Listing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumericDescriptor {
            get {
                return this.NumericDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.NumericDescriptorField, value) != true)) {
                    this.NumericDescriptorField = value;
                    this.RaisePropertyChanged("NumericDescriptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyNameKey {
            get {
                return this.PropertyNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameKeyField, value) != true)) {
                    this.PropertyNameKeyField = value;
                    this.RaisePropertyChanged("PropertyNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyTypeNameKey {
            get {
                return this.PropertyTypeNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeNameKeyField, value) != true)) {
                    this.PropertyTypeNameKeyField = value;
                    this.RaisePropertyChanged("PropertyTypeNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchFieldName {
            get {
                return this.SearchFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchFieldNameField, value) != true)) {
                    this.SearchFieldNameField = value;
                    this.RaisePropertyChanged("SearchFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sortable {
            get {
                return this.SortableField;
            }
            set {
                if ((this.SortableField.Equals(value) != true)) {
                    this.SortableField = value;
                    this.RaisePropertyChanged("Sortable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertySwatchModel[] Swatches {
            get {
                return this.SwatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.SwatchesField, value) != true)) {
                    this.SwatchesField = value;
                    this.RaisePropertyChanged("Swatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymbolPlacement {
            get {
                return this.SymbolPlacementField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolPlacementField, value) != true)) {
                    this.SymbolPlacementField = value;
                    this.RaisePropertyChanged("SymbolPlacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyValueModel[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertySwatchModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Properties.Models" +
        "")]
    [System.SerializableAttribute()]
    public partial class PropertySwatchModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertySwatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertySwatchImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertySwatchImageMediumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertySwatchImageSmallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertySwatchLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertySwatchNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertySwatchID {
            get {
                return this.PropertySwatchIDField;
            }
            set {
                if ((this.PropertySwatchIDField.Equals(value) != true)) {
                    this.PropertySwatchIDField = value;
                    this.RaisePropertyChanged("PropertySwatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertySwatchImage {
            get {
                return this.PropertySwatchImageField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertySwatchImageField, value) != true)) {
                    this.PropertySwatchImageField = value;
                    this.RaisePropertyChanged("PropertySwatchImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertySwatchImageMedium {
            get {
                return this.PropertySwatchImageMediumField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertySwatchImageMediumField, value) != true)) {
                    this.PropertySwatchImageMediumField = value;
                    this.RaisePropertyChanged("PropertySwatchImageMedium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertySwatchImageSmall {
            get {
                return this.PropertySwatchImageSmallField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertySwatchImageSmallField, value) != true)) {
                    this.PropertySwatchImageSmallField = value;
                    this.RaisePropertyChanged("PropertySwatchImageSmall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertySwatchLabel {
            get {
                return this.PropertySwatchLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertySwatchLabelField, value) != true)) {
                    this.PropertySwatchLabelField = value;
                    this.RaisePropertyChanged("PropertySwatchLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertySwatchNameKey {
            get {
                return this.PropertySwatchNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertySwatchNameKeyField, value) != true)) {
                    this.PropertySwatchNameKeyField = value;
                    this.RaisePropertyChanged("PropertySwatchNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyValueModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Properties.Models" +
        "")]
    [System.SerializableAttribute()]
    public partial class PropertyValueModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyValueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyValueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyValueNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyValueID {
            get {
                return this.PropertyValueIDField;
            }
            set {
                if ((this.PropertyValueIDField.Equals(value) != true)) {
                    this.PropertyValueIDField = value;
                    this.RaisePropertyChanged("PropertyValueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyValueName {
            get {
                return this.PropertyValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyValueNameField, value) != true)) {
                    this.PropertyValueNameField = value;
                    this.RaisePropertyChanged("PropertyValueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyValueNameKey {
            get {
                return this.PropertyValueNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyValueNameKeyField, value) != true)) {
                    this.PropertyValueNameKeyField = value;
                    this.RaisePropertyChanged("PropertyValueNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationPropertiesService.IApplicationPropertiesService")]
    public interface IApplicationPropertiesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreateProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreatePropertyResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreateProperty(string accountId, string propertyTypeNameKey, string propertyName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreateProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreatePropertyResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreatePropertyAsync(string accountId, string propertyTypeNameKey, string propertyName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetPropertyCount", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyCountResponse")]
        int GetPropertyCount(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetPropertyCount", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyCountResponse")]
        System.Threading.Tasks.Task<int> GetPropertyCountAsync(string accountId, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetPropertyTypes", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyTypesResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyTypeModel[] GetPropertyTypes(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetPropertyTypes", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyTypesResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyTypeModel[]> GetPropertyTypesAsync(string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertiesResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel[] GetProperties(string accountNameKey, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyListType listType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertiesResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel[]> GetPropertiesAsync(string accountNameKey, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyListType listType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel GetProperty(string accountNameKey, string propertyNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/GetProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/GetPropertyResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel> GetPropertyAsync(string accountNameKey, string propertyNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreatePropertyValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreatePropertyValueResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreatePropertyValue(string accountId, string propertyNameKey, string propertyValueName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreatePropertyValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreatePropertyValueResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreatePropertyValueAsync(string accountId, string propertyNameKey, string propertyValueName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UploadPropertySwatchImage", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UploadPropertySwatchImageRespons" +
            "e")]
        string UploadPropertySwatchImage(string accountId, byte[] imageByteArray, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UploadPropertySwatchImage", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UploadPropertySwatchImageRespons" +
            "e")]
        System.Threading.Tasks.Task<string> UploadPropertySwatchImageAsync(string accountId, byte[] imageByteArray, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreateSwatchValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreateSwatchValueResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreateSwatchValue(string accountId, string propertyNameKey, string swatchImage, string swatchLabel, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/CreateSwatchValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/CreateSwatchValueResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreateSwatchValueAsync(string accountId, string propertyNameKey, string swatchImage, string swatchLabel, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyListingState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyListingStateRespon" +
            "se")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyListingState(string accountId, string propertyNameKey, bool listingState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyListingState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyListingStateRespon" +
            "se")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyListingStateAsync(string accountId, string propertyNameKey, bool listingState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyDetailsState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyDetailsStateRespon" +
            "se")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyDetailsState(string accountId, string propertyNameKey, bool detailsState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyDetailsState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyDetailsStateRespon" +
            "se")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyDetailsStateAsync(string accountId, string propertyNameKey, bool detailsState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetInterval", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetIntervalRespo" +
            "nse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyFacetInterval(string accountId, string propertyNameKey, int newFacetInterval, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetInterval", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetIntervalRespo" +
            "nse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyFacetIntervalAsync(string accountId, string propertyNameKey, int newFacetInterval, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetableStateResp" +
            "onse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyFacetableState(string accountId, string propertyNameKey, bool isFacetable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyFacetableStateResp" +
            "onse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyFacetableStateAsync(string accountId, string propertyNameKey, bool isFacetable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySortableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySortableStateRespo" +
            "nse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySortableState(string accountId, string propertyNameKey, bool isSortable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySortableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySortableStateRespo" +
            "nse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySortableStateAsync(string accountId, string propertyNameKey, bool isSortable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyAppendableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyAppendableStateRes" +
            "ponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyAppendableState(string accountId, string propertyNameKey, bool isAppendable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyAppendableState", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertyAppendableStateRes" +
            "ponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyAppendableStateAsync(string accountId, string propertyNameKey, bool isAppendable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbol", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySymbol(string accountId, string propertyNameKey, string symbol, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbol", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySymbolAsync(string accountId, string propertyNameKey, string symbol, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolPlacement", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolPlacementRes" +
            "ponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySymbolPlacement(string accountId, string propertyNameKey, string symbolPlacement, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolPlacement", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdatePropertySymbolPlacementRes" +
            "ponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySymbolPlacementAsync(string accountId, string propertyNameKey, string symbolPlacement, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdateFeaturedProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdateFeaturedPropertiesResponse" +
            "")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdateFeaturedProperties(string accountId, System.Collections.Generic.Dictionary<string, int> featuredOrderingDictionary, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/UpdateFeaturedProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/UpdateFeaturedPropertiesResponse" +
            "")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdateFeaturedPropertiesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> featuredOrderingDictionary, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/ResetFeaturedProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/ResetFeaturedPropertiesResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType ResetFeaturedProperties(string accountId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/ResetFeaturedProperties", ReplyAction="http://tempuri.org/IApplicationPropertiesService/ResetFeaturedPropertiesResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> ResetFeaturedPropertiesAsync(string accountId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeleteProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertyResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeleteProperty(string accountId, string propertyId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeleteProperty", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertyResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertyAsync(string accountId, string propertyId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeletePropertyValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertyValueResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeletePropertyValue(string accountId, string propertyNameKey, string propertyValueNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeletePropertyValue", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertyValueResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertyValueAsync(string accountId, string propertyNameKey, string propertyValueNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeletePropertySwatch", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertySwatchResponse")]
        InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeletePropertySwatch(string accountId, string propertyNameKey, string propertySwatchNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationPropertiesService/DeletePropertySwatch", ReplyAction="http://tempuri.org/IApplicationPropertiesService/DeletePropertySwatchResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertySwatchAsync(string accountId, string propertyNameKey, string propertySwatchNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationPropertiesServiceChannel : InventoryHawk.Account.Public.Api.ApplicationPropertiesService.IApplicationPropertiesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationPropertiesServiceClient : System.ServiceModel.ClientBase<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.IApplicationPropertiesService>, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.IApplicationPropertiesService {
        
        public ApplicationPropertiesServiceClient() {
        }
        
        public ApplicationPropertiesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationPropertiesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationPropertiesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationPropertiesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreateProperty(string accountId, string propertyTypeNameKey, string propertyName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateProperty(accountId, propertyTypeNameKey, propertyName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreatePropertyAsync(string accountId, string propertyTypeNameKey, string propertyName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreatePropertyAsync(accountId, propertyTypeNameKey, propertyName, requesterId, requesterType, sharedClientKey);
        }
        
        public int GetPropertyCount(string accountId, string sharedClientKey) {
            return base.Channel.GetPropertyCount(accountId, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<int> GetPropertyCountAsync(string accountId, string sharedClientKey) {
            return base.Channel.GetPropertyCountAsync(accountId, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyTypeModel[] GetPropertyTypes(string sharedClientKey) {
            return base.Channel.GetPropertyTypes(sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyTypeModel[]> GetPropertyTypesAsync(string sharedClientKey) {
            return base.Channel.GetPropertyTypesAsync(sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel[] GetProperties(string accountNameKey, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyListType listType, string sharedClientKey) {
            return base.Channel.GetProperties(accountNameKey, listType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel[]> GetPropertiesAsync(string accountNameKey, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyListType listType, string sharedClientKey) {
            return base.Channel.GetPropertiesAsync(accountNameKey, listType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel GetProperty(string accountNameKey, string propertyNameKey, string sharedClientKey) {
            return base.Channel.GetProperty(accountNameKey, propertyNameKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.PropertyModel> GetPropertyAsync(string accountNameKey, string propertyNameKey, string sharedClientKey) {
            return base.Channel.GetPropertyAsync(accountNameKey, propertyNameKey, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreatePropertyValue(string accountId, string propertyNameKey, string propertyValueName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreatePropertyValue(accountId, propertyNameKey, propertyValueName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreatePropertyValueAsync(string accountId, string propertyNameKey, string propertyValueName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreatePropertyValueAsync(accountId, propertyNameKey, propertyValueName, requesterId, requesterType, sharedClientKey);
        }
        
        public string UploadPropertySwatchImage(string accountId, byte[] imageByteArray, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UploadPropertySwatchImage(accountId, imageByteArray, requesterID, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string> UploadPropertySwatchImageAsync(string accountId, byte[] imageByteArray, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UploadPropertySwatchImageAsync(accountId, imageByteArray, requesterID, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType CreateSwatchValue(string accountId, string propertyNameKey, string swatchImage, string swatchLabel, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSwatchValue(accountId, propertyNameKey, swatchImage, swatchLabel, requesterID, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> CreateSwatchValueAsync(string accountId, string propertyNameKey, string swatchImage, string swatchLabel, string requesterID, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSwatchValueAsync(accountId, propertyNameKey, swatchImage, swatchLabel, requesterID, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyListingState(string accountId, string propertyNameKey, bool listingState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyListingState(accountId, propertyNameKey, listingState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyListingStateAsync(string accountId, string propertyNameKey, bool listingState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyListingStateAsync(accountId, propertyNameKey, listingState, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyDetailsState(string accountId, string propertyNameKey, bool detailsState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyDetailsState(accountId, propertyNameKey, detailsState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyDetailsStateAsync(string accountId, string propertyNameKey, bool detailsState, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyDetailsStateAsync(accountId, propertyNameKey, detailsState, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyFacetInterval(string accountId, string propertyNameKey, int newFacetInterval, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyFacetInterval(accountId, propertyNameKey, newFacetInterval, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyFacetIntervalAsync(string accountId, string propertyNameKey, int newFacetInterval, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyFacetIntervalAsync(accountId, propertyNameKey, newFacetInterval, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyFacetableState(string accountId, string propertyNameKey, bool isFacetable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyFacetableState(accountId, propertyNameKey, isFacetable, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyFacetableStateAsync(string accountId, string propertyNameKey, bool isFacetable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyFacetableStateAsync(accountId, propertyNameKey, isFacetable, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySortableState(string accountId, string propertyNameKey, bool isSortable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySortableState(accountId, propertyNameKey, isSortable, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySortableStateAsync(string accountId, string propertyNameKey, bool isSortable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySortableStateAsync(accountId, propertyNameKey, isSortable, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertyAppendableState(string accountId, string propertyNameKey, bool isAppendable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyAppendableState(accountId, propertyNameKey, isAppendable, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertyAppendableStateAsync(string accountId, string propertyNameKey, bool isAppendable, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertyAppendableStateAsync(accountId, propertyNameKey, isAppendable, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySymbol(string accountId, string propertyNameKey, string symbol, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySymbol(accountId, propertyNameKey, symbol, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySymbolAsync(string accountId, string propertyNameKey, string symbol, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySymbolAsync(accountId, propertyNameKey, symbol, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdatePropertySymbolPlacement(string accountId, string propertyNameKey, string symbolPlacement, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySymbolPlacement(accountId, propertyNameKey, symbolPlacement, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdatePropertySymbolPlacementAsync(string accountId, string propertyNameKey, string symbolPlacement, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePropertySymbolPlacementAsync(accountId, propertyNameKey, symbolPlacement, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType UpdateFeaturedProperties(string accountId, System.Collections.Generic.Dictionary<string, int> featuredOrderingDictionary, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateFeaturedProperties(accountId, featuredOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> UpdateFeaturedPropertiesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> featuredOrderingDictionary, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateFeaturedPropertiesAsync(accountId, featuredOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType ResetFeaturedProperties(string accountId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetFeaturedProperties(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> ResetFeaturedPropertiesAsync(string accountId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetFeaturedPropertiesAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeleteProperty(string accountId, string propertyId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteProperty(accountId, propertyId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertyAsync(string accountId, string propertyId, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePropertyAsync(accountId, propertyId, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeletePropertyValue(string accountId, string propertyNameKey, string propertyValueNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePropertyValue(accountId, propertyNameKey, propertyValueNameKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertyValueAsync(string accountId, string propertyNameKey, string propertyValueNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePropertyValueAsync(accountId, propertyNameKey, propertyValueNameKey, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType DeletePropertySwatch(string accountId, string propertyNameKey, string propertySwatchNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePropertySwatch(accountId, propertyNameKey, propertySwatchNameKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationPropertiesService.DataAccessResponseType> DeletePropertySwatchAsync(string accountId, string propertyNameKey, string propertySwatchNameKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationPropertiesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePropertySwatchAsync(accountId, propertyNameKey, propertySwatchNameKey, requesterId, requesterType, sharedClientKey);
        }
    }
}
