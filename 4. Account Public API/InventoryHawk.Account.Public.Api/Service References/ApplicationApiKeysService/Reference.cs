//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryHawk.Account.Public.Api.ApplicationApiKeysService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiKeyModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.ApiKeys.Models")]
    [System.SerializableAttribute()]
    public partial class ApiKeyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ApiKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ApiKey {
            get {
                return this.ApiKeyField;
            }
            set {
                if ((this.ApiKeyField.Equals(value) != true)) {
                    this.ApiKeyField = value;
                    this.RaisePropertyChanged("ApiKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationApiKeysService.IApplicationApiKeysService")]
    public interface IApplicationApiKeysService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/GetApiKeys", ReplyAction="http://tempuri.org/IApplicationApiKeysService/GetApiKeysResponse")]
        InventoryHawk.Account.Public.Api.ApplicationApiKeysService.ApiKeyModel[] GetApiKeys(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/GetApiKeys", ReplyAction="http://tempuri.org/IApplicationApiKeysService/GetApiKeysResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationApiKeysService.ApiKeyModel[]> GetApiKeysAsync(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/GenerateApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/GenerateApiKeyResponse")]
        string GenerateApiKey(string accountNameKey, string name, string description, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/GenerateApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/GenerateApiKeyResponse")]
        System.Threading.Tasks.Task<string> GenerateApiKeyAsync(string accountNameKey, string name, string description, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/RegenenerateApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/RegenenerateApiKeyResponse")]
        string RegenenerateApiKey(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/RegenenerateApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/RegenenerateApiKeyResponse")]
        System.Threading.Tasks.Task<string> RegenenerateApiKeyAsync(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/DeleteApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/DeleteApiKeyResponse")]
        InventoryHawk.Account.Public.Api.ApplicationApiKeysService.DataAccessResponseType DeleteApiKey(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationApiKeysService/DeleteApiKey", ReplyAction="http://tempuri.org/IApplicationApiKeysService/DeleteApiKeyResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationApiKeysService.DataAccessResponseType> DeleteApiKeyAsync(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationApiKeysServiceChannel : InventoryHawk.Account.Public.Api.ApplicationApiKeysService.IApplicationApiKeysService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationApiKeysServiceClient : System.ServiceModel.ClientBase<InventoryHawk.Account.Public.Api.ApplicationApiKeysService.IApplicationApiKeysService>, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.IApplicationApiKeysService {
        
        public ApplicationApiKeysServiceClient() {
        }
        
        public ApplicationApiKeysServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationApiKeysServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationApiKeysServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationApiKeysServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationApiKeysService.ApiKeyModel[] GetApiKeys(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetApiKeys(accountNameKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationApiKeysService.ApiKeyModel[]> GetApiKeysAsync(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetApiKeysAsync(accountNameKey, sharedClientKey);
        }
        
        public string GenerateApiKey(string accountNameKey, string name, string description, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GenerateApiKey(accountNameKey, name, description, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string> GenerateApiKeyAsync(string accountNameKey, string name, string description, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.GenerateApiKeyAsync(accountNameKey, name, description, requesterId, requesterType, sharedClientKey);
        }
        
        public string RegenenerateApiKey(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RegenenerateApiKey(accountNameKey, apiKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string> RegenenerateApiKeyAsync(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RegenenerateApiKeyAsync(accountNameKey, apiKey, requesterId, requesterType, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationApiKeysService.DataAccessResponseType DeleteApiKey(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteApiKey(accountNameKey, apiKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationApiKeysService.DataAccessResponseType> DeleteApiKeyAsync(string accountNameKey, string apiKey, string requesterId, InventoryHawk.Account.Public.Api.ApplicationApiKeysService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteApiKeyAsync(accountNameKey, apiKey, requesterId, requesterType, sharedClientKey);
        }
    }
}
