//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryHawk.Account.Public.Api.ApplicationTagsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationTagsService.IApplicationTagsService")]
    public interface IApplicationTagsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/CreateTag", ReplyAction="http://tempuri.org/IApplicationTagsService/CreateTagResponse")]
        InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType CreateTag(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/CreateTag", ReplyAction="http://tempuri.org/IApplicationTagsService/CreateTagResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType> CreateTagAsync(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/GetTags", ReplyAction="http://tempuri.org/IApplicationTagsService/GetTagsResponse")]
        string[] GetTags(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/GetTags", ReplyAction="http://tempuri.org/IApplicationTagsService/GetTagsResponse")]
        System.Threading.Tasks.Task<string[]> GetTagsAsync(string accountNameKey, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/DeleteTag", ReplyAction="http://tempuri.org/IApplicationTagsService/DeleteTagResponse")]
        InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType DeleteTag(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationTagsService/DeleteTag", ReplyAction="http://tempuri.org/IApplicationTagsService/DeleteTagResponse")]
        System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType> DeleteTagAsync(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationTagsServiceChannel : InventoryHawk.Account.Public.Api.ApplicationTagsService.IApplicationTagsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationTagsServiceClient : System.ServiceModel.ClientBase<InventoryHawk.Account.Public.Api.ApplicationTagsService.IApplicationTagsService>, InventoryHawk.Account.Public.Api.ApplicationTagsService.IApplicationTagsService {
        
        public ApplicationTagsServiceClient() {
        }
        
        public ApplicationTagsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationTagsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationTagsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationTagsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType CreateTag(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateTag(accountId, tagName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType> CreateTagAsync(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateTagAsync(accountId, tagName, requesterId, requesterType, sharedClientKey);
        }
        
        public string[] GetTags(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetTags(accountNameKey, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTagsAsync(string accountNameKey, string sharedClientKey) {
            return base.Channel.GetTagsAsync(accountNameKey, sharedClientKey);
        }
        
        public InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType DeleteTag(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteTag(accountId, tagName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<InventoryHawk.Account.Public.Api.ApplicationTagsService.DataAccessResponseType> DeleteTagAsync(string accountId, string tagName, string requesterId, InventoryHawk.Account.Public.Api.ApplicationTagsService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteTagAsync(accountId, tagName, requesterId, requesterType, sharedClientKey);
        }
    }
}
