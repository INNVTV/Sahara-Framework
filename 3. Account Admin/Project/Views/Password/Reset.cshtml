@model AccountAdminSite.Models.Authentication.ResetPassword
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BackgroundImageLayout.cshtml"; //<-- Switch to _PublicLayout to remove Background Image
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => Model.AccountNameKey);
    @Html.HiddenFor(m => Model.Email);
    @Html.HiddenFor(m => Model.PasswordClaimKey);


    <div class="container">

        <div class="col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4 col-lg-4 col col-lg-offset-4">

            <div style="text-align:center; margin-top:25px; margin-bottom:25px">
                <img src="~/Images/Logos/sahara-logo-login-ko.png" />
            </div>

            @if (!ViewData.ModelState.IsValid)
            {

                //Used to show CoreService Errors at the top:
                if (@ViewData.ModelState["CoreServiceError"] != null)
                {
                    <div style="margin-bottom: 25px; color: red; text-align: center;">
                        <h5><strong>@ViewData.ModelState["CoreServiceError"].Errors[0].ErrorMessage</strong></h5>
                    </div>
                }

                /*Use for a listing of errors @ the top of the page:
                foreach (ModelState modelState in ViewData.ModelState.Values)
                {
                    foreach (ModelError error in modelState.Errors)
                    {
                        <div style="margin-bottom:25px; color:red; text-align:center;">
                            <h5><strong>@error.ErrorMessage</strong></h5>
                        </div>
                    }

                }*/
            }


            <div class="form-group">
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Password"].Errors.Count() > 0)
                {
                    <div style="margin-bottom:-2px; color:red; text-align:left;">
                        <h5><strong>@ViewData.ModelState["Password"].Errors[0].ErrorMessage</strong></h5>
                    </div>
                }
                <input type="password" name="password" class="form-control input-lg
                       @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Password"].Errors.Count() > 0)
                       { <text> field-validation-error input-validation-error</text>}"
                       placeholder="New Password" value="@ViewData.Model.Password">
            </div>
            
            
            <div class="form-group">
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["PasswordConfirm"].Errors.Count() > 0)
                {
                    <div style="margin-bottom:-2px; color:red; text-align:left;">
                        <h5><strong>@ViewData.ModelState["PasswordConfirm"].Errors[0].ErrorMessage</strong></h5>
                    </div>
                }
                <input type="password" name="passwordConfirm" class="form-control input-lg
                       @if (!ViewData.ModelState.IsValid && ViewData.ModelState["PasswordConfirm"].Errors.Count() > 0)
                       { <text> field-validation-error input-validation-error</text>}"
                       placeholder="Confirm New Password" value="@ViewData.Model.PasswordConfirm">
            </div>




            <div class="form-group">
                <button class="btn btn-primary btn-lg btn-block">Reset password</button>
                <!--<div style="margin-top:15px; color: gray">Forgot your password? <a href="~/Login/ResetPassword">Reset it</a></div>-->
            </div>
        </div>

    </div>
}


