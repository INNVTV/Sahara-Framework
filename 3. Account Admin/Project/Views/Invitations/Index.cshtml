@model AccountAdminSite.Models.Users.CreateUserFromInvitationModel
@{
    ViewBag.Title = "Create Profile";
    Layout = "~/Views/Shared/_BackgroundImageLayout.cshtml"; //<-- Switch to _PublicLayout to remove Background Image
}

<script language="javascript" type="text/javascript">
        $(document).ready(function () {
            try {
                $("input[type='text']").each(function(){
                               $(this).attr("autocomplete","off");
                            });
            }
            catch (e)
            { }
        });

</script>

<div class="container">

    <div class="col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4 col-lg-4 col-lg-offset-4">

        <div style="text-align:center; margin-top:25px; margin-bottom:25px">
            <img src="~/Images/Logos/sahara-logo-login-ko.png" />
        </div>


        @if (!ViewData.ModelState.IsValid)
        {
            foreach (ModelState modelState in ViewData.ModelState.Values)
            {
                foreach (ModelError error in modelState.Errors)
                {
                    <div style="margin-bottom:10px; color:red; text-align:center;">
                        <h5><strong>@error.ErrorMessage</strong></h5>
                    </div>
                }

            }
        }
        else
        {
            <h4 style="color:lightblue; text-align: center">Create your @CoreServices.PlatformSettings.ApplicationName profile</h4>
        }

        <div style="padding:10px;"></div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                
                @Html.HiddenFor(model => model.AccountNameKey)
                @Html.HiddenFor(model => model.InvitationCode)
                @Html.HiddenFor(model => model.Email)
                @Html.HiddenFor(model => model.Role)
                @Html.HiddenFor(model => model.Owner)



                <div class="form-group">
                    <input type="text" autocomplete="off" value="@Model.FirstName" name="FirstName" class="form-control input-lg
                           @if (!ViewData.ModelState.IsValid && ViewData.ModelState["FirstName"].Errors.Count() > 0) { <text> field-validation-error input-validation-error</text>}"
                           placeholder="First name">
                </div>
                <div class="form-group">
                    <input type="text" autocomplete="off" value="@Model.LastName" name="LastName" class="form-control input-lg
                           @if (!ViewData.ModelState.IsValid && ViewData.ModelState["LastName"].Errors.Count() > 0) { <text> field-validation-error input-validation-error</text>}"
                           placeholder="Last name">
                </div>
                <div class="form-group">
                    <input type="password" autocomplete="off" value="@Model.Password" name="Password" class="form-control input-lg
                           @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Password"].Errors.Count() > 0) { <text> field-validation-error input-validation-error</text>}"
                           placeholder="Password">

                </div>
                <div class="form-group">
                    <input type="password" autocomplete="off" value="@Model.ConfirmPassword" name="ConfirmPassword" class="form-control input-lg
                           @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Password"].Errors.Count() > 0) { <text> field-validation-error input-validation-error</text>}"
                           placeholder="Confirm Password">
                </div>



                <div class="form-group">
                    <button class="btn btn-primary btn-lg btn-block">Create my profile</button>
                    <!--<span><a href="#">Need help?</a></span>
                        <span class="pull-right"><a href="#">New Registration</a></span>-->
                </div>



            </div>
        }

    </div>

</div>
