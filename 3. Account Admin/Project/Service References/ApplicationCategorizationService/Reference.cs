//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountAdminSite.ApplicationCategorizationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryTreeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class CategoryTreeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubcategoryTreeModel[] SubcategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryTreeModel[] Subcategories {
            get {
                return this.SubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoriesField, value) != true)) {
                    this.SubcategoriesField = value;
                    this.RaisePropertyChanged("Subcategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubcategoryTreeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubcategoryTreeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubsubcategoryTreeModel[] SubsubcategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubsubcategoryTreeModel[] Subsubcategories {
            get {
                return this.SubsubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoriesField, value) != true)) {
                    this.SubsubcategoriesField = value;
                    this.RaisePropertyChanged("Subsubcategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubcategoryTreeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubcategoryTreeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryTreeModel[] SubsubsubcategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryTreeModel[] Subsubsubcategories {
            get {
                return this.SubsubsubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoriesField, value) != true)) {
                    this.SubsubsubcategoriesField = value;
                    this.RaisePropertyChanged("Subsubsubcategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubsubcategoryTreeModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubsubcategoryTreeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class CategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubcategoryListModel[] SubcategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryNameKey {
            get {
                return this.CategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameKeyField, value) != true)) {
                    this.CategoryNameKeyField = value;
                    this.RaisePropertyChanged("CategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryListModel[] Subcategories {
            get {
                return this.SubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoriesField, value) != true)) {
                    this.SubcategoriesField = value;
                    this.RaisePropertyChanged("Subcategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubcategoryListModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubcategoryListModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubcategoryID {
            get {
                return this.SubcategoryIDField;
            }
            set {
                if ((this.SubcategoryIDField.Equals(value) != true)) {
                    this.SubcategoryIDField = value;
                    this.RaisePropertyChanged("SubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryNameKey {
            get {
                return this.SubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameKeyField, value) != true)) {
                    this.SubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubcategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubcategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.CategoryParentModel CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubsubcategoryListModel[] SubsubcategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.CategoryParentModel Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubcategoryID {
            get {
                return this.SubcategoryIDField;
            }
            set {
                if ((this.SubcategoryIDField.Equals(value) != true)) {
                    this.SubcategoryIDField = value;
                    this.RaisePropertyChanged("SubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryNameKey {
            get {
                return this.SubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameKeyField, value) != true)) {
                    this.SubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubsubcategoryListModel[] Subsubcategories {
            get {
                return this.SubsubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoriesField, value) != true)) {
                    this.SubsubcategoriesField = value;
                    this.RaisePropertyChanged("Subsubcategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryParentModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class CategoryParentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryNameKey {
            get {
                return this.CategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameKeyField, value) != true)) {
                    this.CategoryNameKeyField = value;
                    this.RaisePropertyChanged("CategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubcategoryListModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubcategoryListModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubcategoryID {
            get {
                return this.SubsubcategoryIDField;
            }
            set {
                if ((this.SubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryName {
            get {
                return this.SubsubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameField, value) != true)) {
                    this.SubsubcategoryNameField = value;
                    this.RaisePropertyChanged("SubsubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryNameKey {
            get {
                return this.SubsubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameKeyField, value) != true)) {
                    this.SubsubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubsubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubcategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubcategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.CategoryParentModel CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubcategoryParentModel SubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryListModel[] SubsubsubcategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.CategoryParentModel Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryParentModel Subcategory {
            get {
                return this.SubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryField, value) != true)) {
                    this.SubcategoryField = value;
                    this.RaisePropertyChanged("Subcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubcategoryID {
            get {
                return this.SubcategoryIDField;
            }
            set {
                if ((this.SubcategoryIDField.Equals(value) != true)) {
                    this.SubcategoryIDField = value;
                    this.RaisePropertyChanged("SubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubcategoryID {
            get {
                return this.SubsubcategoryIDField;
            }
            set {
                if ((this.SubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryName {
            get {
                return this.SubsubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameField, value) != true)) {
                    this.SubsubcategoryNameField = value;
                    this.RaisePropertyChanged("SubsubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryNameKey {
            get {
                return this.SubsubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameKeyField, value) != true)) {
                    this.SubsubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubsubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryListModel[] Subsubsubcategories {
            get {
                return this.SubsubsubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoriesField, value) != true)) {
                    this.SubsubsubcategoriesField = value;
                    this.RaisePropertyChanged("Subsubsubcategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubcategoryParentModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubcategoryParentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubcategoryID {
            get {
                return this.SubcategoryIDField;
            }
            set {
                if ((this.SubcategoryIDField.Equals(value) != true)) {
                    this.SubcategoryIDField = value;
                    this.RaisePropertyChanged("SubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryNameKey {
            get {
                return this.SubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameKeyField, value) != true)) {
                    this.SubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubsubcategoryListModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubsubcategoryListModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubsubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubsubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubsubcategoryID {
            get {
                return this.SubsubsubcategoryIDField;
            }
            set {
                if ((this.SubsubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubsubcategoryName {
            get {
                return this.SubsubsubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoryNameField, value) != true)) {
                    this.SubsubsubcategoryNameField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubsubcategoryNameKey {
            get {
                return this.SubsubsubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoryNameKeyField, value) != true)) {
                    this.SubsubsubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubsubcategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubsubcategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.CategoryParentModel CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubcategoryParentModel SubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.ApplicationCategorizationService.SubsubcategoryParentModel SubsubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubsubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubsubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.CategoryParentModel Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryParentModel Subcategory {
            get {
                return this.SubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryField, value) != true)) {
                    this.SubcategoryField = value;
                    this.RaisePropertyChanged("Subcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubcategoryID {
            get {
                return this.SubcategoryIDField;
            }
            set {
                if ((this.SubcategoryIDField.Equals(value) != true)) {
                    this.SubcategoryIDField = value;
                    this.RaisePropertyChanged("SubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.ApplicationCategorizationService.SubsubcategoryParentModel Subsubcategory {
            get {
                return this.SubsubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryField, value) != true)) {
                    this.SubsubcategoryField = value;
                    this.RaisePropertyChanged("Subsubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubcategoryID {
            get {
                return this.SubsubcategoryIDField;
            }
            set {
                if ((this.SubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubsubcategoryID {
            get {
                return this.SubsubsubcategoryIDField;
            }
            set {
                if ((this.SubsubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubsubcategoryName {
            get {
                return this.SubsubsubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoryNameField, value) != true)) {
                    this.SubsubsubcategoryNameField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubsubcategoryNameKey {
            get {
                return this.SubsubsubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubsubcategoryNameKeyField, value) != true)) {
                    this.SubsubsubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubsubsubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubsubcategoryParentModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Application.Categorization.Mo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class SubsubcategoryParentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubsubcategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsubcategoryNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQualifiedName {
            get {
                return this.FullyQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQualifiedNameField, value) != true)) {
                    this.FullyQualifiedNameField = value;
                    this.RaisePropertyChanged("FullyQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationPath {
            get {
                return this.LocationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationPathField, value) != true)) {
                    this.LocationPathField = value;
                    this.RaisePropertyChanged("LocationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubsubcategoryID {
            get {
                return this.SubsubcategoryIDField;
            }
            set {
                if ((this.SubsubcategoryIDField.Equals(value) != true)) {
                    this.SubsubcategoryIDField = value;
                    this.RaisePropertyChanged("SubsubcategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryName {
            get {
                return this.SubsubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameField, value) != true)) {
                    this.SubsubcategoryNameField = value;
                    this.RaisePropertyChanged("SubsubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubsubcategoryNameKey {
            get {
                return this.SubsubcategoryNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsubcategoryNameKeyField, value) != true)) {
                    this.SubsubcategoryNameKeyField = value;
                    this.RaisePropertyChanged("SubsubcategoryNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationCategorizationService.IApplicationCategorizationService")]
    public interface IApplicationCategorizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategoryTree", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoryTreeResponse")]
        AccountAdminSite.ApplicationCategorizationService.CategoryTreeModel[] GetCategoryTree(string accountNameKey, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategoryTree", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoryTreeResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryTreeModel[]> GetCategoryTreeAsync(string accountNameKey, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateCategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateCategory(string accountId, string categoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateCategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateCategoryAsync(string accountId, string categoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameCategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameCategory(string accountId, string categoryId, string newCategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameCategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameCategoryAsync(string accountId, string categoryId, string newCategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryVisibleState", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryVisibleStateRe" +
            "sponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateCategoryVisibleState(string accountId, string categoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryVisibleState", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryVisibleStateRe" +
            "sponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateCategoryVisibleStateAsync(string accountId, string categoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryDescription", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryDescriptionRes" +
            "ponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateCategoryDescription(string accountId, string categoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryDescription", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateCategoryDescriptionRes" +
            "ponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateCategoryDescriptionAsync(string accountId, string categoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderCategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderCategoriesResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderCategories(string accountId, System.Collections.Generic.Dictionary<string, int> categoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderCategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderCategoriesResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderCategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> categoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetCategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetCategoryOrderingRespons" +
            "e")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetCategoryOrdering(string accountId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetCategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetCategoryOrderingRespons" +
            "e")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetCategoryOrderingAsync(string accountId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoriesResponse")]
        AccountAdminSite.ApplicationCategorizationService.CategoryModel[] GetCategories(string accountNameKey, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryModel[]> GetCategoriesAsync(string accountNameKey, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategoryByName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoryByNameResponse")]
        AccountAdminSite.ApplicationCategorizationService.CategoryModel GetCategoryByName(string accountNameKey, string categoryName, bool includeHiddenSubcategories, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategoryByName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategoryByNameResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryModel> GetCategoryByNameAsync(string accountNameKey, string categoryName, bool includeHiddenSubcategories, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteCategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteCategory(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteCategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteCategoryAsync(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubcategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubcategory(string accountId, string categoryId, string subcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubcategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubcategoryAsync(string accountId, string categoryId, string subcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubcategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubcategory(string accountId, string subcategoryId, string newSubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubcategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubcategoryAsync(string accountId, string subcategoryId, string newSubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryVisibleStat" +
            "e", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryVisibleStat" +
            "eResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubcategoryVisibleState(string accountId, string subcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryVisibleStat" +
            "e", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryVisibleStat" +
            "eResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubcategoryVisibleStateAsync(string accountId, string subcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryDescription" +
            "", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryDescription" +
            "Response")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubcategoryDescription(string accountId, string subcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryDescription" +
            "", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubcategoryDescription" +
            "Response")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubcategoryDescriptionAsync(string accountId, string subcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubcategoriesResponse" +
            "")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubcategoriesResponse" +
            "")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubcategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubcategoryOrderingResp" +
            "onse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubcategoryOrdering(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubcategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubcategoryOrderingResp" +
            "onse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubcategoryOrderingAsync(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByNamesRespons" +
            "e")]
        AccountAdminSite.ApplicationCategorizationService.SubcategoryModel GetSubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByNamesRespons" +
            "e")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubcategoryModel> GetSubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByFullyQualifi" +
            "edName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByFullyQualifi" +
            "edNameResponse")]
        AccountAdminSite.ApplicationCategorizationService.SubcategoryModel GetSubcategoryByFullyQualifiedName(string accountNameKey, string fullyQaulifiedName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByFullyQualifi" +
            "edName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubcategoryByFullyQualifi" +
            "edNameResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubcategoryModel> GetSubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQaulifiedName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubcategoryResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubcategory(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubcategoryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubcategoryAsync(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubsubcategoryResponse" +
            "")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubsubcategory(string accountId, string subcategoryId, string subsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubsubcategoryResponse" +
            "")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubsubcategoryAsync(string accountId, string subcategoryId, string subsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubsubcategoryResponse" +
            "")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubsubcategory(string accountId, string subsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubsubcategoryResponse" +
            "")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubsubcategoryAsync(string accountId, string subsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryVisibleS" +
            "tate", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryVisibleS" +
            "tateResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubcategoryVisibleState(string accountId, string subsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryVisibleS" +
            "tate", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryVisibleS" +
            "tateResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubcategoryVisibleStateAsync(string accountId, string subsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryDescript" +
            "ion", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryDescript" +
            "ionResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubcategoryDescription(string accountId, string subsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryDescript" +
            "ion", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubcategoryDescript" +
            "ionResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubcategoryDescriptionAsync(string accountId, string subsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubcategoriesRespo" +
            "nse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubsubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubcategoriesRespo" +
            "nse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubsubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubsubcategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubsubcategoryOrderingR" +
            "esponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubsubcategoryOrdering(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubsubcategoryOrdering", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubsubcategoryOrderingR" +
            "esponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubsubcategoryOrderingAsync(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByNamesResp" +
            "onse")]
        AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel GetSubsubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByNamesResp" +
            "onse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel> GetSubsubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByFullyQual" +
            "ifiedName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByFullyQual" +
            "ifiedNameResponse")]
        AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel GetSubsubcategoryByFullyQualifiedName(string accountNameKey, string fullyQualifiedName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByFullyQual" +
            "ifiedName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubcategoryByFullyQual" +
            "ifiedNameResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel> GetSubsubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQualifiedName, bool includeHidden, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubcategoryResponse" +
            "")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubsubcategory(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubcategoryResponse" +
            "")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubsubcategoryAsync(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubsubsubcategoryRespo" +
            "nse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubsubsubcategory(string accountId, string subsubcategoryId, string subsubsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/CreateSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/CreateSubsubsubcategoryRespo" +
            "nse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubsubsubcategoryAsync(string accountId, string subsubcategoryId, string subsubsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubsubsubcategoryRespo" +
            "nse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubsubsubcategory(string accountId, string subsubsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/RenameSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/RenameSubsubsubcategoryRespo" +
            "nse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubsubsubcategoryAsync(string accountId, string subsubsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryVisib" +
            "leState", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryVisib" +
            "leStateResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubsubcategoryVisibleState(string accountId, string subsubsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryVisib" +
            "leState", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryVisib" +
            "leStateResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubsubcategoryVisibleStateAsync(string accountId, string subsubsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryDescr" +
            "iption", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryDescr" +
            "iptionResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubsubcategoryDescription(string accountId, string subsubsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryDescr" +
            "iption", ReplyAction="http://tempuri.org/IApplicationCategorizationService/UpdateSubsubsubcategoryDescr" +
            "iptionResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubsubcategoryDescriptionAsync(string accountId, string subsubsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubsubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubsubcategoriesRe" +
            "sponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubsubsubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subsubsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubsubcategories", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ReorderSubsubsubcategoriesRe" +
            "sponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubsubsubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subsubsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubsubsubcategoryOrderi" +
            "ng", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubsubsubcategoryOrderi" +
            "ngResponse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubsubsubcategoryOrdering(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/ResetSubsubsubcategoryOrderi" +
            "ng", ReplyAction="http://tempuri.org/IApplicationCategorizationService/ResetSubsubsubcategoryOrderi" +
            "ngResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubsubsubcategoryOrderingAsync(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByNamesR" +
            "esponse")]
        AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel GetSubsubsubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, string subsubsubcategoryName, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByNames", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByNamesR" +
            "esponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel> GetSubsubsubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, string subsubsubcategoryName, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByFullyQ" +
            "ualifiedName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByFullyQ" +
            "ualifiedNameResponse")]
        AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel GetSubsubsubcategoryByFullyQualifiedName(string accountNameKey, string fullyQUalifiedDame, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByFullyQ" +
            "ualifiedName", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetSubsubsubcategoryByFullyQ" +
            "ualifiedNameResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel> GetSubsubsubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQUalifiedDame, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubsubcategoryRespo" +
            "nse")]
        AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubsubsubcategory(string accountId, string subsubsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubsubcategory", ReplyAction="http://tempuri.org/IApplicationCategorizationService/DeleteSubsubsubcategoryRespo" +
            "nse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubsubsubcategoryAsync(string accountId, string subsubsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategorizationCount", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategorizationCountRespon" +
            "se")]
        int GetCategorizationCount(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationCategorizationService/GetCategorizationCount", ReplyAction="http://tempuri.org/IApplicationCategorizationService/GetCategorizationCountRespon" +
            "se")]
        System.Threading.Tasks.Task<int> GetCategorizationCountAsync(string accountId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationCategorizationServiceChannel : AccountAdminSite.ApplicationCategorizationService.IApplicationCategorizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationCategorizationServiceClient : System.ServiceModel.ClientBase<AccountAdminSite.ApplicationCategorizationService.IApplicationCategorizationService>, AccountAdminSite.ApplicationCategorizationService.IApplicationCategorizationService {
        
        public ApplicationCategorizationServiceClient() {
        }
        
        public ApplicationCategorizationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationCategorizationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationCategorizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationCategorizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AccountAdminSite.ApplicationCategorizationService.CategoryTreeModel[] GetCategoryTree(string accountNameKey, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetCategoryTree(accountNameKey, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryTreeModel[]> GetCategoryTreeAsync(string accountNameKey, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetCategoryTreeAsync(accountNameKey, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateCategory(string accountId, string categoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateCategory(accountId, categoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateCategoryAsync(string accountId, string categoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateCategoryAsync(accountId, categoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameCategory(string accountId, string categoryId, string newCategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameCategory(accountId, categoryId, newCategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameCategoryAsync(string accountId, string categoryId, string newCategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameCategoryAsync(accountId, categoryId, newCategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateCategoryVisibleState(string accountId, string categoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateCategoryVisibleState(accountId, categoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateCategoryVisibleStateAsync(string accountId, string categoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateCategoryVisibleStateAsync(accountId, categoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateCategoryDescription(string accountId, string categoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateCategoryDescription(accountId, categoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateCategoryDescriptionAsync(string accountId, string categoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateCategoryDescriptionAsync(accountId, categoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderCategories(string accountId, System.Collections.Generic.Dictionary<string, int> categoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderCategories(accountId, categoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderCategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> categoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderCategoriesAsync(accountId, categoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetCategoryOrdering(string accountId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetCategoryOrdering(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetCategoryOrderingAsync(string accountId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetCategoryOrderingAsync(accountId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.CategoryModel[] GetCategories(string accountNameKey, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetCategories(accountNameKey, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryModel[]> GetCategoriesAsync(string accountNameKey, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetCategoriesAsync(accountNameKey, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.CategoryModel GetCategoryByName(string accountNameKey, string categoryName, bool includeHiddenSubcategories, string sharedClientKey) {
            return base.Channel.GetCategoryByName(accountNameKey, categoryName, includeHiddenSubcategories, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.CategoryModel> GetCategoryByNameAsync(string accountNameKey, string categoryName, bool includeHiddenSubcategories, string sharedClientKey) {
            return base.Channel.GetCategoryByNameAsync(accountNameKey, categoryName, includeHiddenSubcategories, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteCategory(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteCategory(accountId, categoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteCategoryAsync(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteCategoryAsync(accountId, categoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubcategory(string accountId, string categoryId, string subcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubcategory(accountId, categoryId, subcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubcategoryAsync(string accountId, string categoryId, string subcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubcategoryAsync(accountId, categoryId, subcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubcategory(string accountId, string subcategoryId, string newSubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubcategory(accountId, subcategoryId, newSubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubcategoryAsync(string accountId, string subcategoryId, string newSubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubcategoryAsync(accountId, subcategoryId, newSubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubcategoryVisibleState(string accountId, string subcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubcategoryVisibleState(accountId, subcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubcategoryVisibleStateAsync(string accountId, string subcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubcategoryVisibleStateAsync(accountId, subcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubcategoryDescription(string accountId, string subcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubcategoryDescription(accountId, subcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubcategoryDescriptionAsync(string accountId, string subcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubcategoryDescriptionAsync(accountId, subcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubcategories(accountId, subcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubcategoriesAsync(accountId, subcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubcategoryOrdering(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubcategoryOrdering(accountId, categoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubcategoryOrderingAsync(string accountId, string categoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubcategoryOrderingAsync(accountId, categoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryModel GetSubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubcategoryByNames(accountNameKey, categoryName, subcategoryName, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubcategoryModel> GetSubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubcategoryByNamesAsync(accountNameKey, categoryName, subcategoryName, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubcategoryModel GetSubcategoryByFullyQualifiedName(string accountNameKey, string fullyQaulifiedName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubcategoryByFullyQualifiedName(accountNameKey, fullyQaulifiedName, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubcategoryModel> GetSubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQaulifiedName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubcategoryByFullyQualifiedNameAsync(accountNameKey, fullyQaulifiedName, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubcategory(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubcategory(accountId, subcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubcategoryAsync(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubcategoryAsync(accountId, subcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubsubcategory(string accountId, string subcategoryId, string subsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubsubcategory(accountId, subcategoryId, subsubcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubsubcategoryAsync(string accountId, string subcategoryId, string subsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubsubcategoryAsync(accountId, subcategoryId, subsubcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubsubcategory(string accountId, string subsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubsubcategory(accountId, subsubcategoryId, newSubsubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubsubcategoryAsync(string accountId, string subsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubsubcategoryAsync(accountId, subsubcategoryId, newSubsubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubcategoryVisibleState(string accountId, string subsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubcategoryVisibleState(accountId, subsubcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubcategoryVisibleStateAsync(string accountId, string subsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubcategoryVisibleStateAsync(accountId, subsubcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubcategoryDescription(string accountId, string subsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubcategoryDescription(accountId, subsubcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubcategoryDescriptionAsync(string accountId, string subsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubcategoryDescriptionAsync(accountId, subsubcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubsubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubsubcategories(accountId, subsubcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubsubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubsubcategoriesAsync(accountId, subsubcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubsubcategoryOrdering(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubsubcategoryOrdering(accountId, subcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubsubcategoryOrderingAsync(string accountId, string subcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubsubcategoryOrderingAsync(accountId, subcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel GetSubsubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubsubcategoryByNames(accountNameKey, categoryName, subcategoryName, subsubcategoryName, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel> GetSubsubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubsubcategoryByNamesAsync(accountNameKey, categoryName, subcategoryName, subsubcategoryName, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel GetSubsubcategoryByFullyQualifiedName(string accountNameKey, string fullyQualifiedName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubsubcategoryByFullyQualifiedName(accountNameKey, fullyQualifiedName, includeHidden, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubcategoryModel> GetSubsubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQualifiedName, bool includeHidden, string sharedClientKey) {
            return base.Channel.GetSubsubcategoryByFullyQualifiedNameAsync(accountNameKey, fullyQualifiedName, includeHidden, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubsubcategory(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubsubcategory(accountId, subsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubsubcategoryAsync(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubsubcategoryAsync(accountId, subsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType CreateSubsubsubcategory(string accountId, string subsubcategoryId, string subsubsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubsubsubcategory(accountId, subsubcategoryId, subsubsubcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> CreateSubsubsubcategoryAsync(string accountId, string subsubcategoryId, string subsubsubcategoryName, bool isVisible, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.CreateSubsubsubcategoryAsync(accountId, subsubcategoryId, subsubsubcategoryName, isVisible, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType RenameSubsubsubcategory(string accountId, string subsubsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubsubsubcategory(accountId, subsubsubcategoryId, newSubsubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> RenameSubsubsubcategoryAsync(string accountId, string subsubsubcategoryId, string newSubsubcategoryName, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.RenameSubsubsubcategoryAsync(accountId, subsubsubcategoryId, newSubsubcategoryName, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubsubcategoryVisibleState(string accountId, string subsubsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubsubcategoryVisibleState(accountId, subsubsubcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubsubcategoryVisibleStateAsync(string accountId, string subsubsubcategoryId, bool visibleState, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubsubcategoryVisibleStateAsync(accountId, subsubsubcategoryId, visibleState, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType UpdateSubsubsubcategoryDescription(string accountId, string subsubsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubsubcategoryDescription(accountId, subsubsubcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> UpdateSubsubsubcategoryDescriptionAsync(string accountId, string subsubsubcategoryId, string newDescription, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateSubsubsubcategoryDescriptionAsync(accountId, subsubsubcategoryId, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ReorderSubsubsubcategories(string accountId, System.Collections.Generic.Dictionary<string, int> subsubsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubsubsubcategories(accountId, subsubsubcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ReorderSubsubsubcategoriesAsync(string accountId, System.Collections.Generic.Dictionary<string, int> subsubsubcategoryOrderingDictionary, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderSubsubsubcategoriesAsync(accountId, subsubsubcategoryOrderingDictionary, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType ResetSubsubsubcategoryOrdering(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubsubsubcategoryOrdering(accountId, subsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> ResetSubsubsubcategoryOrderingAsync(string accountId, string subsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ResetSubsubsubcategoryOrderingAsync(accountId, subsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel GetSubsubsubcategoryByNames(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, string subsubsubcategoryName, string sharedClientKey) {
            return base.Channel.GetSubsubsubcategoryByNames(accountNameKey, categoryName, subcategoryName, subsubcategoryName, subsubsubcategoryName, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel> GetSubsubsubcategoryByNamesAsync(string accountNameKey, string categoryName, string subcategoryName, string subsubcategoryName, string subsubsubcategoryName, string sharedClientKey) {
            return base.Channel.GetSubsubsubcategoryByNamesAsync(accountNameKey, categoryName, subcategoryName, subsubcategoryName, subsubsubcategoryName, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel GetSubsubsubcategoryByFullyQualifiedName(string accountNameKey, string fullyQUalifiedDame, string sharedClientKey) {
            return base.Channel.GetSubsubsubcategoryByFullyQualifiedName(accountNameKey, fullyQUalifiedDame, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.SubsubsubcategoryModel> GetSubsubsubcategoryByFullyQualifiedNameAsync(string accountNameKey, string fullyQUalifiedDame, string sharedClientKey) {
            return base.Channel.GetSubsubsubcategoryByFullyQualifiedNameAsync(accountNameKey, fullyQUalifiedDame, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType DeleteSubsubsubcategory(string accountId, string subsubsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubsubsubcategory(accountId, subsubsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationCategorizationService.DataAccessResponseType> DeleteSubsubsubcategoryAsync(string accountId, string subsubsubcategoryId, string requesterId, AccountAdminSite.ApplicationCategorizationService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteSubsubsubcategoryAsync(accountId, subsubsubcategoryId, requesterId, requesterType, sharedClientKey);
        }
        
        public int GetCategorizationCount(string accountId) {
            return base.Channel.GetCategorizationCount(accountId);
        }
        
        public System.Threading.Tasks.Task<int> GetCategorizationCountAsync(string accountId) {
            return base.Channel.GetCategorizationCountAsync(accountId);
        }
    }
}
