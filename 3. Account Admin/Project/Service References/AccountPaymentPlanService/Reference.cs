//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountAdminSite.AccountPaymentPlanService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentPlan", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class PaymentPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowCustomOrderingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowImageEnhancementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLocationDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowSalesLeadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowThemesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountAdminSite.AccountPaymentPlanService.AlternateRate[] AlternateRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCategorizationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCategorizationsPerSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageFormatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageGalleriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImageGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxImagesPerGalleryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxProductsPerSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxValuesPerPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonthlyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthlySupportHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentPlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCustomOrdering {
            get {
                return this.AllowCustomOrderingField;
            }
            set {
                if ((this.AllowCustomOrderingField.Equals(value) != true)) {
                    this.AllowCustomOrderingField = value;
                    this.RaisePropertyChanged("AllowCustomOrdering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowImageEnhancements {
            get {
                return this.AllowImageEnhancementsField;
            }
            set {
                if ((this.AllowImageEnhancementsField.Equals(value) != true)) {
                    this.AllowImageEnhancementsField = value;
                    this.RaisePropertyChanged("AllowImageEnhancements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLocationData {
            get {
                return this.AllowLocationDataField;
            }
            set {
                if ((this.AllowLocationDataField.Equals(value) != true)) {
                    this.AllowLocationDataField = value;
                    this.RaisePropertyChanged("AllowLocationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSalesLeads {
            get {
                return this.AllowSalesLeadsField;
            }
            set {
                if ((this.AllowSalesLeadsField.Equals(value) != true)) {
                    this.AllowSalesLeadsField = value;
                    this.RaisePropertyChanged("AllowSalesLeads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowThemes {
            get {
                return this.AllowThemesField;
            }
            set {
                if ((this.AllowThemesField.Equals(value) != true)) {
                    this.AllowThemesField = value;
                    this.RaisePropertyChanged("AllowThemes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountAdminSite.AccountPaymentPlanService.AlternateRate[] AlternateRates {
            get {
                return this.AlternateRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateRatesField, value) != true)) {
                    this.AlternateRatesField = value;
                    this.RaisePropertyChanged("AlternateRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCategorizations {
            get {
                return this.MaxCategorizationsField;
            }
            set {
                if ((this.MaxCategorizationsField.Equals(value) != true)) {
                    this.MaxCategorizationsField = value;
                    this.RaisePropertyChanged("MaxCategorizations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCategorizationsPerSet {
            get {
                return this.MaxCategorizationsPerSetField;
            }
            set {
                if ((this.MaxCategorizationsPerSetField.Equals(value) != true)) {
                    this.MaxCategorizationsPerSetField = value;
                    this.RaisePropertyChanged("MaxCategorizationsPerSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageFormats {
            get {
                return this.MaxImageFormatsField;
            }
            set {
                if ((this.MaxImageFormatsField.Equals(value) != true)) {
                    this.MaxImageFormatsField = value;
                    this.RaisePropertyChanged("MaxImageFormats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageGalleries {
            get {
                return this.MaxImageGalleriesField;
            }
            set {
                if ((this.MaxImageGalleriesField.Equals(value) != true)) {
                    this.MaxImageGalleriesField = value;
                    this.RaisePropertyChanged("MaxImageGalleries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImageGroups {
            get {
                return this.MaxImageGroupsField;
            }
            set {
                if ((this.MaxImageGroupsField.Equals(value) != true)) {
                    this.MaxImageGroupsField = value;
                    this.RaisePropertyChanged("MaxImageGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxImagesPerGallery {
            get {
                return this.MaxImagesPerGalleryField;
            }
            set {
                if ((this.MaxImagesPerGalleryField.Equals(value) != true)) {
                    this.MaxImagesPerGalleryField = value;
                    this.RaisePropertyChanged("MaxImagesPerGallery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProducts {
            get {
                return this.MaxProductsField;
            }
            set {
                if ((this.MaxProductsField.Equals(value) != true)) {
                    this.MaxProductsField = value;
                    this.RaisePropertyChanged("MaxProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProductsPerSet {
            get {
                return this.MaxProductsPerSetField;
            }
            set {
                if ((this.MaxProductsPerSetField.Equals(value) != true)) {
                    this.MaxProductsPerSetField = value;
                    this.RaisePropertyChanged("MaxProductsPerSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxProperties {
            get {
                return this.MaxPropertiesField;
            }
            set {
                if ((this.MaxPropertiesField.Equals(value) != true)) {
                    this.MaxPropertiesField = value;
                    this.RaisePropertyChanged("MaxProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxTags {
            get {
                return this.MaxTagsField;
            }
            set {
                if ((this.MaxTagsField.Equals(value) != true)) {
                    this.MaxTagsField = value;
                    this.RaisePropertyChanged("MaxTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxUsers {
            get {
                return this.MaxUsersField;
            }
            set {
                if ((this.MaxUsersField.Equals(value) != true)) {
                    this.MaxUsersField = value;
                    this.RaisePropertyChanged("MaxUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxValuesPerProperty {
            get {
                return this.MaxValuesPerPropertyField;
            }
            set {
                if ((this.MaxValuesPerPropertyField.Equals(value) != true)) {
                    this.MaxValuesPerPropertyField = value;
                    this.RaisePropertyChanged("MaxValuesPerProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyRate {
            get {
                return this.MonthlyRateField;
            }
            set {
                if ((this.MonthlyRateField.Equals(value) != true)) {
                    this.MonthlyRateField = value;
                    this.RaisePropertyChanged("MonthlyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthlySupportHours {
            get {
                return this.MonthlySupportHoursField;
            }
            set {
                if ((this.MonthlySupportHoursField.Equals(value) != true)) {
                    this.MonthlySupportHoursField = value;
                    this.RaisePropertyChanged("MonthlySupportHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentPlanName {
            get {
                return this.PaymentPlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentPlanNameField, value) != true)) {
                    this.PaymentPlanNameField = value;
                    this.RaisePropertyChanged("PaymentPlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchPlan {
            get {
                return this.SearchPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPlanField, value) != true)) {
                    this.SearchPlanField = value;
                    this.RaisePropertyChanged("SearchPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlternateRate", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class AlternateRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyInMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SavingsPercentageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountedPrice {
            get {
                return this.DiscountedPriceField;
            }
            set {
                if ((this.DiscountedPriceField.Equals(value) != true)) {
                    this.DiscountedPriceField = value;
                    this.RaisePropertyChanged("DiscountedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyInMonths {
            get {
                return this.FrequencyInMonthsField;
            }
            set {
                if ((this.FrequencyInMonthsField.Equals(value) != true)) {
                    this.FrequencyInMonthsField = value;
                    this.RaisePropertyChanged("FrequencyInMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyInterval {
            get {
                return this.FrequencyIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyIntervalField, value) != true)) {
                    this.FrequencyIntervalField = value;
                    this.RaisePropertyChanged("FrequencyInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyName {
            get {
                return this.FrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyNameField, value) != true)) {
                    this.FrequencyNameField = value;
                    this.RaisePropertyChanged("FrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SavingsPercentage {
            get {
                return this.SavingsPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.SavingsPercentageField, value) != true)) {
                    this.SavingsPercentageField = value;
                    this.RaisePropertyChanged("SavingsPercentage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentFrequency", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Accounts.PaymentPlans.Models")]
    [System.SerializableAttribute()]
    public partial class PaymentFrequency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentFrequencyMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentFrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceBreakField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.IntervalField, value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntervalCount {
            get {
                return this.IntervalCountField;
            }
            set {
                if ((this.IntervalCountField.Equals(value) != true)) {
                    this.IntervalCountField = value;
                    this.RaisePropertyChanged("IntervalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentFrequencyMonths {
            get {
                return this.PaymentFrequencyMonthsField;
            }
            set {
                if ((this.PaymentFrequencyMonthsField.Equals(value) != true)) {
                    this.PaymentFrequencyMonthsField = value;
                    this.RaisePropertyChanged("PaymentFrequencyMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentFrequencyName {
            get {
                return this.PaymentFrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFrequencyNameField, value) != true)) {
                    this.PaymentFrequencyNameField = value;
                    this.RaisePropertyChanged("PaymentFrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceBreak {
            get {
                return this.PriceBreakField;
            }
            set {
                if ((this.PriceBreakField.Equals(value) != true)) {
                    this.PriceBreakField = value;
                    this.RaisePropertyChanged("PriceBreak");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountPaymentPlanService.IAccountPaymentPlanService")]
    public interface IAccountPaymentPlanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlans", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlansResponse")]
        AccountAdminSite.AccountPaymentPlanService.PaymentPlan[] GetPaymentPlans(bool includeHiddenPlans, bool orderByRateAsc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlans", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlansResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentPlan[]> GetPaymentPlansAsync(bool includeHiddenPlans, bool orderByRateAsc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequencies", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequenciesResponse")]
        AccountAdminSite.AccountPaymentPlanService.PaymentFrequency[] GetPaymentFrequencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequencies", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequenciesResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentFrequency[]> GetPaymentFrequenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlanResponse")]
        AccountAdminSite.AccountPaymentPlanService.PaymentPlan GetPaymentPlan(string planName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentPlanResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentPlan> GetPaymentPlanAsync(string planName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequency", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequencyResponse")]
        AccountAdminSite.AccountPaymentPlanService.PaymentFrequency GetPaymentFrequency(string frequencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequency", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/GetPaymentFrequencyResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentFrequency> GetPaymentFrequencyAsync(string frequencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/CreatePaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/CreatePaymentPlanResponse")]
        AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType CreatePaymentPlan(
                    string paymentPlanName, 
                    decimal monthlyRate, 
                    int maxUsers, 
                    int maxCategorizationsPerSet, 
                    int maxProductsPerSet, 
                    int maxProperties, 
                    int maxValuesPerProperty, 
                    int maxTags, 
                    bool allowSalesLeads, 
                    bool allowImageEnhancements, 
                    bool allowLocationData, 
                    bool allowCustomOrdering, 
                    bool allowThemes, 
                    int monthlySupportHours, 
                    int maxImageGroups, 
                    int maxImageFormats, 
                    int maxImageGalleries, 
                    int maxImagesPerGallery, 
                    bool visible, 
                    string requesterId, 
                    AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, 
                    string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/CreatePaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/CreatePaymentPlanResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> CreatePaymentPlanAsync(
                    string paymentPlanName, 
                    decimal monthlyRate, 
                    int maxUsers, 
                    int maxCategorizationsPerSet, 
                    int maxProductsPerSet, 
                    int maxProperties, 
                    int maxValuesPerProperty, 
                    int maxTags, 
                    bool allowSalesLeads, 
                    bool allowImageEnhancements, 
                    bool allowLocationData, 
                    bool allowCustomOrdering, 
                    bool allowThemes, 
                    int monthlySupportHours, 
                    int maxImageGroups, 
                    int maxImageFormats, 
                    int maxImageGalleries, 
                    int maxImagesPerGallery, 
                    bool visible, 
                    string requesterId, 
                    AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, 
                    string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/UpdatePlanVisibility", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/UpdatePlanVisibilityResponse")]
        AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType UpdatePlanVisibility(string paymentPlanName, bool newVisibility, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/UpdatePlanVisibility", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/UpdatePlanVisibilityResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> UpdatePlanVisibilityAsync(string paymentPlanName, bool newVisibility, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/DeletePaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/DeletePaymentPlanResponse")]
        AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType DeletePaymentPlan(string paymentPlanName, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountPaymentPlanService/DeletePaymentPlan", ReplyAction="http://tempuri.org/IAccountPaymentPlanService/DeletePaymentPlanResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> DeletePaymentPlanAsync(string paymentPlanName, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountPaymentPlanServiceChannel : AccountAdminSite.AccountPaymentPlanService.IAccountPaymentPlanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountPaymentPlanServiceClient : System.ServiceModel.ClientBase<AccountAdminSite.AccountPaymentPlanService.IAccountPaymentPlanService>, AccountAdminSite.AccountPaymentPlanService.IAccountPaymentPlanService {
        
        public AccountPaymentPlanServiceClient() {
        }
        
        public AccountPaymentPlanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountPaymentPlanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountPaymentPlanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountPaymentPlanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AccountAdminSite.AccountPaymentPlanService.PaymentPlan[] GetPaymentPlans(bool includeHiddenPlans, bool orderByRateAsc) {
            return base.Channel.GetPaymentPlans(includeHiddenPlans, orderByRateAsc);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentPlan[]> GetPaymentPlansAsync(bool includeHiddenPlans, bool orderByRateAsc) {
            return base.Channel.GetPaymentPlansAsync(includeHiddenPlans, orderByRateAsc);
        }
        
        public AccountAdminSite.AccountPaymentPlanService.PaymentFrequency[] GetPaymentFrequencies() {
            return base.Channel.GetPaymentFrequencies();
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentFrequency[]> GetPaymentFrequenciesAsync() {
            return base.Channel.GetPaymentFrequenciesAsync();
        }
        
        public AccountAdminSite.AccountPaymentPlanService.PaymentPlan GetPaymentPlan(string planName) {
            return base.Channel.GetPaymentPlan(planName);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentPlan> GetPaymentPlanAsync(string planName) {
            return base.Channel.GetPaymentPlanAsync(planName);
        }
        
        public AccountAdminSite.AccountPaymentPlanService.PaymentFrequency GetPaymentFrequency(string frequencyId) {
            return base.Channel.GetPaymentFrequency(frequencyId);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.PaymentFrequency> GetPaymentFrequencyAsync(string frequencyId) {
            return base.Channel.GetPaymentFrequencyAsync(frequencyId);
        }
        
        public AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType CreatePaymentPlan(
                    string paymentPlanName, 
                    decimal monthlyRate, 
                    int maxUsers, 
                    int maxCategorizationsPerSet, 
                    int maxProductsPerSet, 
                    int maxProperties, 
                    int maxValuesPerProperty, 
                    int maxTags, 
                    bool allowSalesLeads, 
                    bool allowImageEnhancements, 
                    bool allowLocationData, 
                    bool allowCustomOrdering, 
                    bool allowThemes, 
                    int monthlySupportHours, 
                    int maxImageGroups, 
                    int maxImageFormats, 
                    int maxImageGalleries, 
                    int maxImagesPerGallery, 
                    bool visible, 
                    string requesterId, 
                    AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, 
                    string sharedClientKey) {
            return base.Channel.CreatePaymentPlan(paymentPlanName, monthlyRate, maxUsers, maxCategorizationsPerSet, maxProductsPerSet, maxProperties, maxValuesPerProperty, maxTags, allowSalesLeads, allowImageEnhancements, allowLocationData, allowCustomOrdering, allowThemes, monthlySupportHours, maxImageGroups, maxImageFormats, maxImageGalleries, maxImagesPerGallery, visible, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> CreatePaymentPlanAsync(
                    string paymentPlanName, 
                    decimal monthlyRate, 
                    int maxUsers, 
                    int maxCategorizationsPerSet, 
                    int maxProductsPerSet, 
                    int maxProperties, 
                    int maxValuesPerProperty, 
                    int maxTags, 
                    bool allowSalesLeads, 
                    bool allowImageEnhancements, 
                    bool allowLocationData, 
                    bool allowCustomOrdering, 
                    bool allowThemes, 
                    int monthlySupportHours, 
                    int maxImageGroups, 
                    int maxImageFormats, 
                    int maxImageGalleries, 
                    int maxImagesPerGallery, 
                    bool visible, 
                    string requesterId, 
                    AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, 
                    string sharedClientKey) {
            return base.Channel.CreatePaymentPlanAsync(paymentPlanName, monthlyRate, maxUsers, maxCategorizationsPerSet, maxProductsPerSet, maxProperties, maxValuesPerProperty, maxTags, allowSalesLeads, allowImageEnhancements, allowLocationData, allowCustomOrdering, allowThemes, monthlySupportHours, maxImageGroups, maxImageFormats, maxImageGalleries, maxImagesPerGallery, visible, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType UpdatePlanVisibility(string paymentPlanName, bool newVisibility, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePlanVisibility(paymentPlanName, newVisibility, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> UpdatePlanVisibilityAsync(string paymentPlanName, bool newVisibility, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdatePlanVisibilityAsync(paymentPlanName, newVisibility, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType DeletePaymentPlan(string paymentPlanName, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePaymentPlan(paymentPlanName, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.AccountPaymentPlanService.DataAccessResponseType> DeletePaymentPlanAsync(string paymentPlanName, string requesterId, AccountAdminSite.AccountPaymentPlanService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeletePaymentPlanAsync(paymentPlanName, requesterId, requesterType, sharedClientKey);
        }
    }
}
