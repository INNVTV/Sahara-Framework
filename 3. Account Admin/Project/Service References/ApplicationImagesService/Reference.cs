//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountAdminSite.ApplicationImagesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageProcessingManifestModel", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Imaging.Models")]
    [System.SerializableAttribute()]
    public partial class ImageProcessingManifestModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupTypeNameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatNameKey {
            get {
                return this.FormatNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatNameKeyField, value) != true)) {
                    this.FormatNameKeyField = value;
                    this.RaisePropertyChanged("FormatNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNameKey {
            get {
                return this.GroupNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameKeyField, value) != true)) {
                    this.GroupNameKeyField = value;
                    this.RaisePropertyChanged("GroupNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupTypeNameKey {
            get {
                return this.GroupTypeNameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupTypeNameKeyField, value) != true)) {
                    this.GroupTypeNameKeyField = value;
                    this.RaisePropertyChanged("GroupTypeNameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIdField, value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectIdField, value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceContainerName {
            get {
                return this.SourceContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceContainerNameField, value) != true)) {
                    this.SourceContainerNameField = value;
                    this.RaisePropertyChanged("SourceContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCropCoordinates", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Imaging.Models")]
    [System.SerializableAttribute()]
    public partial class ImageCropCoordinates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BottomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Bottom {
            get {
                return this.BottomField;
            }
            set {
                if ((this.BottomField.Equals(value) != true)) {
                    this.BottomField = value;
                    this.RaisePropertyChanged("Bottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Left {
            get {
                return this.LeftField;
            }
            set {
                if ((this.LeftField.Equals(value) != true)) {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Right {
            get {
                return this.RightField;
            }
            set {
                if ((this.RightField.Equals(value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Platform.Requests.Models")]
    public enum RequesterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformUser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageEnhancementInstructions", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Imaging.Models")]
    [System.SerializableAttribute()]
    public partial class ImageEnhancementInstructions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrightnessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContrastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GreyscaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PolaroidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaturationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SepiaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SharpenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Brightness {
            get {
                return this.BrightnessField;
            }
            set {
                if ((this.BrightnessField.Equals(value) != true)) {
                    this.BrightnessField = value;
                    this.RaisePropertyChanged("Brightness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Contrast {
            get {
                return this.ContrastField;
            }
            set {
                if ((this.ContrastField.Equals(value) != true)) {
                    this.ContrastField = value;
                    this.RaisePropertyChanged("Contrast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Greyscale {
            get {
                return this.GreyscaleField;
            }
            set {
                if ((this.GreyscaleField.Equals(value) != true)) {
                    this.GreyscaleField = value;
                    this.RaisePropertyChanged("Greyscale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Polaroid {
            get {
                return this.PolaroidField;
            }
            set {
                if ((this.PolaroidField.Equals(value) != true)) {
                    this.PolaroidField = value;
                    this.RaisePropertyChanged("Polaroid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Saturation {
            get {
                return this.SaturationField;
            }
            set {
                if ((this.SaturationField.Equals(value) != true)) {
                    this.SaturationField = value;
                    this.RaisePropertyChanged("Saturation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sepia {
            get {
                return this.SepiaField;
            }
            set {
                if ((this.SepiaField.Equals(value) != true)) {
                    this.SepiaField = value;
                    this.RaisePropertyChanged("Sepia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sharpen {
            get {
                return this.SharpenField;
            }
            set {
                if ((this.SharpenField.Equals(value) != true)) {
                    this.SharpenField = value;
                    this.RaisePropertyChanged("Sharpen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAccessResponseType", Namespace="http://schemas.datacontract.org/2004/07/Sahara.Core.Common.ResponseTypes")]
    [System.SerializableAttribute()]
    public partial class DataAccessResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SuccessMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleInstance {
            get {
                return this.RoleInstanceField;
            }
            set {
                if ((this.RoleInstanceField.Equals(value) != true)) {
                    this.RoleInstanceField = value;
                    this.RaisePropertyChanged("RoleInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessCode {
            get {
                return this.SuccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessCodeField, value) != true)) {
                    this.SuccessCodeField = value;
                    this.RaisePropertyChanged("SuccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SuccessMessages {
            get {
                return this.SuccessMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessagesField, value) != true)) {
                    this.SuccessMessagesField = value;
                    this.RaisePropertyChanged("SuccessMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                if ((this.isSuccessField.Equals(value) != true)) {
                    this.isSuccessField = value;
                    this.RaisePropertyChanged("isSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationImagesService.IApplicationImagesService")]
    public interface IApplicationImagesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/ProcessImage", ReplyAction="http://tempuri.org/IApplicationImagesService/ProcessImageResponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType ProcessImage(string accountId, AccountAdminSite.ApplicationImagesService.ImageProcessingManifestModel imageManifest, AccountAdminSite.ApplicationImagesService.ImageCropCoordinates imageCropCoordinates, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, AccountAdminSite.ApplicationImagesService.ImageEnhancementInstructions imageEnhancementInstructions, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/ProcessImage", ReplyAction="http://tempuri.org/IApplicationImagesService/ProcessImageResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> ProcessImageAsync(string accountId, AccountAdminSite.ApplicationImagesService.ImageProcessingManifestModel imageManifest, AccountAdminSite.ApplicationImagesService.ImageCropCoordinates imageCropCoordinates, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, AccountAdminSite.ApplicationImagesService.ImageEnhancementInstructions imageEnhancementInstructions, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordTitle", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordTitleResponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordTitle(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordTitle", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordTitleResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordTitleAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordDescription", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordDescriptionResponse" +
            "")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordDescription(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordDescription", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordDescriptionResponse" +
            "")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordDescriptionAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryTitle", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryTitleRespons" +
            "e")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordGalleryTitle(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryTitle", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryTitleRespons" +
            "e")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordGalleryTitleAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryDescription", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryDescriptionR" +
            "esponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordGalleryDescription(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryDescription", ReplyAction="http://tempuri.org/IApplicationImagesService/UpdateImageRecordGalleryDescriptionR" +
            "esponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordGalleryDescriptionAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/ReorderImageRecordGallery", ReplyAction="http://tempuri.org/IApplicationImagesService/ReorderImageRecordGalleryResponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType ReorderImageRecordGallery(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int[] imageIndexOrder, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/ReorderImageRecordGallery", ReplyAction="http://tempuri.org/IApplicationImagesService/ReorderImageRecordGalleryResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> ReorderImageRecordGalleryAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int[] imageIndexOrder, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/DeleteImageRecord", ReplyAction="http://tempuri.org/IApplicationImagesService/DeleteImageRecordResponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType DeleteImageRecord(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/DeleteImageRecord", ReplyAction="http://tempuri.org/IApplicationImagesService/DeleteImageRecordResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> DeleteImageRecordAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/DeleteGalleryImage", ReplyAction="http://tempuri.org/IApplicationImagesService/DeleteGalleryImageResponse")]
        AccountAdminSite.ApplicationImagesService.DataAccessResponseType DeleteGalleryImage(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationImagesService/DeleteGalleryImage", ReplyAction="http://tempuri.org/IApplicationImagesService/DeleteGalleryImageResponse")]
        System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> DeleteGalleryImageAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationImagesServiceChannel : AccountAdminSite.ApplicationImagesService.IApplicationImagesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationImagesServiceClient : System.ServiceModel.ClientBase<AccountAdminSite.ApplicationImagesService.IApplicationImagesService>, AccountAdminSite.ApplicationImagesService.IApplicationImagesService {
        
        public ApplicationImagesServiceClient() {
        }
        
        public ApplicationImagesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationImagesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationImagesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationImagesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType ProcessImage(string accountId, AccountAdminSite.ApplicationImagesService.ImageProcessingManifestModel imageManifest, AccountAdminSite.ApplicationImagesService.ImageCropCoordinates imageCropCoordinates, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, AccountAdminSite.ApplicationImagesService.ImageEnhancementInstructions imageEnhancementInstructions, string sharedClientKey) {
            return base.Channel.ProcessImage(accountId, imageManifest, imageCropCoordinates, requesterId, requesterType, imageEnhancementInstructions, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> ProcessImageAsync(string accountId, AccountAdminSite.ApplicationImagesService.ImageProcessingManifestModel imageManifest, AccountAdminSite.ApplicationImagesService.ImageCropCoordinates imageCropCoordinates, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, AccountAdminSite.ApplicationImagesService.ImageEnhancementInstructions imageEnhancementInstructions, string sharedClientKey) {
            return base.Channel.ProcessImageAsync(accountId, imageManifest, imageCropCoordinates, requesterId, requesterType, imageEnhancementInstructions, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordTitle(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordTitle(accountId, objectType, objectId, groupNameKey, formatNameKey, newTitle, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordTitleAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordTitleAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, newTitle, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordDescription(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordDescription(accountId, objectType, objectId, groupNameKey, formatNameKey, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordDescriptionAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordDescriptionAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordGalleryTitle(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordGalleryTitle(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, newTitle, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordGalleryTitleAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newTitle, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordGalleryTitleAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, newTitle, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType UpdateImageRecordGalleryDescription(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordGalleryDescription(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> UpdateImageRecordGalleryDescriptionAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string newDescription, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.UpdateImageRecordGalleryDescriptionAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, newDescription, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType ReorderImageRecordGallery(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int[] imageIndexOrder, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderImageRecordGallery(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndexOrder, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> ReorderImageRecordGalleryAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int[] imageIndexOrder, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.ReorderImageRecordGalleryAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndexOrder, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType DeleteImageRecord(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteImageRecord(accountId, objectType, objectId, groupNameKey, formatNameKey, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> DeleteImageRecordAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteImageRecordAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, requesterId, requesterType, sharedClientKey);
        }
        
        public AccountAdminSite.ApplicationImagesService.DataAccessResponseType DeleteGalleryImage(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteGalleryImage(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, requesterId, requesterType, sharedClientKey);
        }
        
        public System.Threading.Tasks.Task<AccountAdminSite.ApplicationImagesService.DataAccessResponseType> DeleteGalleryImageAsync(string accountId, string objectType, string objectId, string groupNameKey, string formatNameKey, int imageIndex, string requesterId, AccountAdminSite.ApplicationImagesService.RequesterType requesterType, string sharedClientKey) {
            return base.Channel.DeleteGalleryImageAsync(accountId, objectType, objectId, groupNameKey, formatNameKey, imageIndex, requesterId, requesterType, sharedClientKey);
        }
    }
}
